// <auto-generated/>
#nullable enable

namespace Microsoft.Extensions.DependencyInjection
{
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public static partial class StarWarsGeneratedClientServiceCollectionExtensions
    {
        public static global::StrawberryShake.IClientBuilder<global::StarWarsGeneratedClient.State.StarWarsGeneratedClientStoreAccessor> AddStarWarsGeneratedClient(this global::Microsoft.Extensions.DependencyInjection.IServiceCollection services, global::StrawberryShake.ExecutionStrategy strategy = global::StrawberryShake.ExecutionStrategy.NetworkOnly)
        {
            var serviceCollection = new global::Microsoft.Extensions.DependencyInjection.ServiceCollection();
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton(services, sp =>
            {
                ConfigureClientDefault(sp, serviceCollection, strategy);
                return new ClientServiceProvider(global::Microsoft.Extensions.DependencyInjection.ServiceCollectionContainerBuilderExtensions.BuildServiceProvider(serviceCollection));
            });
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton(services, sp => new global::StarWarsGeneratedClient.State.StarWarsGeneratedClientStoreAccessor(global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StrawberryShake.IOperationStore>(global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<ClientServiceProvider>(sp)), global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StrawberryShake.IEntityStore>(global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<ClientServiceProvider>(sp)), global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StrawberryShake.IEntityIdSerializer>(global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<ClientServiceProvider>(sp)), global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::System.Collections.Generic.IEnumerable<global::StrawberryShake.IOperationRequestFactory>>(global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<ClientServiceProvider>(sp)), global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::System.Collections.Generic.IEnumerable<global::StrawberryShake.IOperationResultDataFactory>>(global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<ClientServiceProvider>(sp))));
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton(services, sp => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StarWarsGeneratedClient.GetHeroQuery>(global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<ClientServiceProvider>(sp)));
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton(services, sp => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StarWarsGeneratedClient.GetCharactersQuery>(global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<ClientServiceProvider>(sp)));
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton(services, sp => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StarWarsGeneratedClient.CreateReviewMutation>(global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<ClientServiceProvider>(sp)));
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton(services, sp => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StarWarsGeneratedClient.StarWarsGeneratedClient>(global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<ClientServiceProvider>(sp)));
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton(services, sp => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StarWarsGeneratedClient.IStarWarsGeneratedClient>(global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<ClientServiceProvider>(sp)));
            return new global::StrawberryShake.ClientBuilder<global::StarWarsGeneratedClient.State.StarWarsGeneratedClientStoreAccessor>("StarWarsGeneratedClient", services, serviceCollection);
        }

        private static global::Microsoft.Extensions.DependencyInjection.IServiceCollection ConfigureClientDefault(global::System.IServiceProvider parentServices, global::Microsoft.Extensions.DependencyInjection.ServiceCollection services, global::StrawberryShake.ExecutionStrategy strategy = global::StrawberryShake.ExecutionStrategy.NetworkOnly)
        {
            global::Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.TryAddSingleton<global::StrawberryShake.IEntityStore, global::StrawberryShake.EntityStore>(services);
            global::Microsoft.Extensions.DependencyInjection.Extensions.ServiceCollectionDescriptorExtensions.TryAddSingleton<global::StrawberryShake.IOperationStore>(services, sp => new global::StrawberryShake.OperationStore(global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StrawberryShake.IEntityStore>(sp)));
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Transport.Http.IHttpConnection>(services, sp =>
            {
                var clientFactory = global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::System.Net.Http.IHttpClientFactory>(parentServices);
                return new global::StrawberryShake.Transport.Http.HttpConnection(() => clientFactory.CreateClient("StarWarsGeneratedClient"));
            });
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IEntityMapper<global::StarWarsGeneratedClient.State.HumanEntity, global::StarWarsGeneratedClient.GetHero_Hero_Human>, global::StarWarsGeneratedClient.State.GetHero_Hero_HumanFromHumanEntityMapper>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IEntityMapper<global::StarWarsGeneratedClient.State.DroidEntity, global::StarWarsGeneratedClient.GetHero_Hero_Droid>, global::StarWarsGeneratedClient.State.GetHero_Hero_DroidFromDroidEntityMapper>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IEntityMapper<global::StarWarsGeneratedClient.State.HumanEntity, global::StarWarsGeneratedClient.GetHero_Hero_Friends_Edges_Node_Human>, global::StarWarsGeneratedClient.State.GetHero_Hero_Friends_Edges_Node_HumanFromHumanEntityMapper>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IEntityMapper<global::StarWarsGeneratedClient.State.DroidEntity, global::StarWarsGeneratedClient.GetHero_Hero_Friends_Edges_Node_Droid>, global::StarWarsGeneratedClient.State.GetHero_Hero_Friends_Edges_Node_DroidFromDroidEntityMapper>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IEntityMapper<global::StarWarsGeneratedClient.State.HumanEntity, global::StarWarsGeneratedClient.GetCharacters_Character_Human>, global::StarWarsGeneratedClient.State.GetCharacters_Character_HumanFromHumanEntityMapper>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IEntityMapper<global::StarWarsGeneratedClient.State.DroidEntity, global::StarWarsGeneratedClient.GetCharacters_Character_Droid>, global::StarWarsGeneratedClient.State.GetCharacters_Character_DroidFromDroidEntityMapper>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IEntityMapper<global::StarWarsGeneratedClient.State.ReviewEntity, global::StarWarsGeneratedClient.CreateReview_CreateReview_Review_Review>, global::StarWarsGeneratedClient.State.CreateReview_CreateReview_Review_ReviewFromReviewEntityMapper>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializer, global::StarWarsGeneratedClient.EpisodeSerializer>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializer, global::StrawberryShake.Serialization.StringSerializer>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializer, global::StrawberryShake.Serialization.BooleanSerializer>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializer, global::StrawberryShake.Serialization.ByteSerializer>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializer, global::StrawberryShake.Serialization.ShortSerializer>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializer, global::StrawberryShake.Serialization.IntSerializer>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializer, global::StrawberryShake.Serialization.LongSerializer>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializer, global::StrawberryShake.Serialization.FloatSerializer>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializer, global::StrawberryShake.Serialization.DecimalSerializer>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializer, global::StrawberryShake.Serialization.UrlSerializer>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializer, global::StrawberryShake.Serialization.UUIDSerializer>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializer, global::StrawberryShake.Serialization.IdSerializer>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializer, global::StrawberryShake.Serialization.DateTimeSerializer>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializer, global::StrawberryShake.Serialization.DateSerializer>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializer, global::StrawberryShake.Serialization.ByteArraySerializer>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializer, global::StrawberryShake.Serialization.TimeSpanSerializer>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializer, global::StrawberryShake.Serialization.JsonSerializer>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializer, global::StarWarsGeneratedClient.CreateReviewInputInputValueFormatter>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializerResolver>(services, sp => new global::StrawberryShake.Serialization.SerializerResolver(global::System.Linq.Enumerable.Concat(global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::System.Collections.Generic.IEnumerable<global::StrawberryShake.Serialization.ISerializer>>(parentServices), global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::System.Collections.Generic.IEnumerable<global::StrawberryShake.Serialization.ISerializer>>(sp))));
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IOperationResultDataFactory<global::StarWarsGeneratedClient.IGetHeroResult>, global::StarWarsGeneratedClient.State.GetHeroResultFactory>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IOperationResultDataFactory>(services, sp => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StrawberryShake.IOperationResultDataFactory<global::StarWarsGeneratedClient.IGetHeroResult>>(sp));
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IOperationRequestFactory>(services, sp => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StarWarsGeneratedClient.IGetHeroQuery>(sp));
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IOperationResultBuilder<global::System.Text.Json.JsonDocument, global::StarWarsGeneratedClient.IGetHeroResult>, global::StarWarsGeneratedClient.State.GetHeroBuilder>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IOperationExecutor<global::StarWarsGeneratedClient.IGetHeroResult>>(services, sp => new global::StrawberryShake.OperationExecutor<global::System.Text.Json.JsonDocument, global::StarWarsGeneratedClient.IGetHeroResult>(global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StrawberryShake.Transport.Http.IHttpConnection>(sp), () => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StrawberryShake.IOperationResultBuilder<global::System.Text.Json.JsonDocument, global::StarWarsGeneratedClient.IGetHeroResult>>(sp), global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StrawberryShake.IOperationStore>(sp), strategy));
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StarWarsGeneratedClient.GetHeroQuery>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StarWarsGeneratedClient.IGetHeroQuery>(services, sp => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StarWarsGeneratedClient.GetHeroQuery>(sp));
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IOperationResultDataFactory<global::StarWarsGeneratedClient.IGetCharactersResult>, global::StarWarsGeneratedClient.State.GetCharactersResultFactory>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IOperationResultDataFactory>(services, sp => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StrawberryShake.IOperationResultDataFactory<global::StarWarsGeneratedClient.IGetCharactersResult>>(sp));
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IOperationRequestFactory>(services, sp => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StarWarsGeneratedClient.IGetCharactersQuery>(sp));
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IOperationResultBuilder<global::System.Text.Json.JsonDocument, global::StarWarsGeneratedClient.IGetCharactersResult>, global::StarWarsGeneratedClient.State.GetCharactersBuilder>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IOperationExecutor<global::StarWarsGeneratedClient.IGetCharactersResult>>(services, sp => new global::StrawberryShake.OperationExecutor<global::System.Text.Json.JsonDocument, global::StarWarsGeneratedClient.IGetCharactersResult>(global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StrawberryShake.Transport.Http.IHttpConnection>(sp), () => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StrawberryShake.IOperationResultBuilder<global::System.Text.Json.JsonDocument, global::StarWarsGeneratedClient.IGetCharactersResult>>(sp), global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StrawberryShake.IOperationStore>(sp), strategy));
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StarWarsGeneratedClient.GetCharactersQuery>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StarWarsGeneratedClient.IGetCharactersQuery>(services, sp => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StarWarsGeneratedClient.GetCharactersQuery>(sp));
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IOperationResultDataFactory<global::StarWarsGeneratedClient.ICreateReviewResult>, global::StarWarsGeneratedClient.State.CreateReviewResultFactory>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IOperationResultDataFactory>(services, sp => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StrawberryShake.IOperationResultDataFactory<global::StarWarsGeneratedClient.ICreateReviewResult>>(sp));
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IOperationRequestFactory>(services, sp => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StarWarsGeneratedClient.ICreateReviewMutation>(sp));
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IOperationResultBuilder<global::System.Text.Json.JsonDocument, global::StarWarsGeneratedClient.ICreateReviewResult>, global::StarWarsGeneratedClient.State.CreateReviewBuilder>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IOperationExecutor<global::StarWarsGeneratedClient.ICreateReviewResult>>(services, sp => new global::StrawberryShake.OperationExecutor<global::System.Text.Json.JsonDocument, global::StarWarsGeneratedClient.ICreateReviewResult>(global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StrawberryShake.Transport.Http.IHttpConnection>(sp), () => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StrawberryShake.IOperationResultBuilder<global::System.Text.Json.JsonDocument, global::StarWarsGeneratedClient.ICreateReviewResult>>(sp), global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StrawberryShake.IOperationStore>(sp), strategy));
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StarWarsGeneratedClient.CreateReviewMutation>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StarWarsGeneratedClient.ICreateReviewMutation>(services, sp => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StarWarsGeneratedClient.CreateReviewMutation>(sp));
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IEntityIdSerializer, global::StarWarsGeneratedClient.State.StarWarsGeneratedClientEntityIdFactory>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StarWarsGeneratedClient.StarWarsGeneratedClient>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StarWarsGeneratedClient.IStarWarsGeneratedClient>(services, sp => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StarWarsGeneratedClient.StarWarsGeneratedClient>(sp));
            return services;
        }

        private class ClientServiceProvider : System.IServiceProvider, System.IDisposable
        {
            private readonly System.IServiceProvider _provider;
            public ClientServiceProvider(System.IServiceProvider provider)
            {
                _provider = provider;
            }

            public object? GetService(System.Type serviceType)
            {
                return _provider.GetService(serviceType);
            }

            public void Dispose()
            {
                if (_provider is System.IDisposable d)
                {
                    d.Dispose();
                }
            }
        }
    }
}

namespace StarWarsGeneratedClient
{
    /// <summary>
    /// The queries related to reviews.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public partial class GetHeroResult : global::System.IEquatable<GetHeroResult>, IGetHeroResult
    {
        public GetHeroResult(global::StarWarsGeneratedClient.IGetHero_Hero hero)
        {
            Hero = hero;
        }

        /// <summary>
        /// Retrieve a hero by a particular Star Wars episode.
        /// 
        /// 
        /// **Returns:**
        /// The hero character.
        /// </summary>
        public global::StarWarsGeneratedClient.IGetHero_Hero Hero { get; }

        public virtual global::System.Boolean Equals(GetHeroResult? other)
        {
            if (ReferenceEquals(null, other))
            {
                return false;
            }

            if (ReferenceEquals(this, other))
            {
                return true;
            }

            if (other.GetType() != GetType())
            {
                return false;
            }

            return (Hero.Equals(other.Hero));
        }

        public override global::System.Boolean Equals(global::System.Object? obj)
        {
            if (ReferenceEquals(null, obj))
            {
                return false;
            }

            if (ReferenceEquals(this, obj))
            {
                return true;
            }

            if (obj.GetType() != GetType())
            {
                return false;
            }

            return Equals((GetHeroResult)obj);
        }

        public override global::System.Int32 GetHashCode()
        {
            unchecked
            {
                int hash = 5;
                hash ^= 397 * Hero.GetHashCode();
                return hash;
            }
        }
    }

    /// <summary>
    /// This resolver class extends all object types implementing ICharacter.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public partial class GetHero_Hero_Human : global::System.IEquatable<GetHero_Hero_Human>, IGetHero_Hero_Human
    {
        public GetHero_Hero_Human(global::System.Int32 id, global::System.String name, global::StarWarsGeneratedClient.IGetHero_Hero_Friends? friends)
        {
            Id = id;
            Name = name;
            Friends = friends;
        }

        /// <summary>
        /// The unique identifier for the character.
        /// </summary>
        public global::System.Int32 Id { get; }

        /// <summary>
        /// The name of the character.
        /// </summary>
        public global::System.String Name { get; }

        public global::StarWarsGeneratedClient.IGetHero_Hero_Friends? Friends { get; }

        public virtual global::System.Boolean Equals(GetHero_Hero_Human? other)
        {
            if (ReferenceEquals(null, other))
            {
                return false;
            }

            if (ReferenceEquals(this, other))
            {
                return true;
            }

            if (other.GetType() != GetType())
            {
                return false;
            }

            return (Id == other.Id) && Name.Equals(other.Name) && ((Friends is null && other.Friends is null) || Friends != null && Friends.Equals(other.Friends));
        }

        public override global::System.Boolean Equals(global::System.Object? obj)
        {
            if (ReferenceEquals(null, obj))
            {
                return false;
            }

            if (ReferenceEquals(this, obj))
            {
                return true;
            }

            if (obj.GetType() != GetType())
            {
                return false;
            }

            return Equals((GetHero_Hero_Human)obj);
        }

        public override global::System.Int32 GetHashCode()
        {
            unchecked
            {
                int hash = 5;
                hash ^= 397 * Id.GetHashCode();
                hash ^= 397 * Name.GetHashCode();
                if (Friends != null)
                {
                    hash ^= 397 * Friends.GetHashCode();
                }

                return hash;
            }
        }
    }

    /// <summary>
    /// This resolver class extends all object types implementing ICharacter.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public partial class GetHero_Hero_Droid : global::System.IEquatable<GetHero_Hero_Droid>, IGetHero_Hero_Droid
    {
        public GetHero_Hero_Droid(global::System.Int32 id, global::System.String name, global::StarWarsGeneratedClient.IGetHero_Hero_Friends? friends)
        {
            Id = id;
            Name = name;
            Friends = friends;
        }

        /// <summary>
        /// The unique identifier for the character.
        /// </summary>
        public global::System.Int32 Id { get; }

        /// <summary>
        /// The name of the character.
        /// </summary>
        public global::System.String Name { get; }

        public global::StarWarsGeneratedClient.IGetHero_Hero_Friends? Friends { get; }

        public virtual global::System.Boolean Equals(GetHero_Hero_Droid? other)
        {
            if (ReferenceEquals(null, other))
            {
                return false;
            }

            if (ReferenceEquals(this, other))
            {
                return true;
            }

            if (other.GetType() != GetType())
            {
                return false;
            }

            return (Id == other.Id) && Name.Equals(other.Name) && ((Friends is null && other.Friends is null) || Friends != null && Friends.Equals(other.Friends));
        }

        public override global::System.Boolean Equals(global::System.Object? obj)
        {
            if (ReferenceEquals(null, obj))
            {
                return false;
            }

            if (ReferenceEquals(this, obj))
            {
                return true;
            }

            if (obj.GetType() != GetType())
            {
                return false;
            }

            return Equals((GetHero_Hero_Droid)obj);
        }

        public override global::System.Int32 GetHashCode()
        {
            unchecked
            {
                int hash = 5;
                hash ^= 397 * Id.GetHashCode();
                hash ^= 397 * Name.GetHashCode();
                if (Friends != null)
                {
                    hash ^= 397 * Friends.GetHashCode();
                }

                return hash;
            }
        }
    }

    /// <summary>
    /// A connection to a list of items.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public partial class GetHero_Hero_Friends_CharacterConnection : global::System.IEquatable<GetHero_Hero_Friends_CharacterConnection>, IGetHero_Hero_Friends_CharacterConnection
    {
        public GetHero_Hero_Friends_CharacterConnection(global::System.Collections.Generic.IReadOnlyList<global::StarWarsGeneratedClient.IGetHero_Hero_Friends_Edges>? edges)
        {
            Edges = edges;
        }

        /// <summary>
        /// A list of edges.
        /// </summary>
        public global::System.Collections.Generic.IReadOnlyList<global::StarWarsGeneratedClient.IGetHero_Hero_Friends_Edges>? Edges { get; }

        public virtual global::System.Boolean Equals(GetHero_Hero_Friends_CharacterConnection? other)
        {
            if (ReferenceEquals(null, other))
            {
                return false;
            }

            if (ReferenceEquals(this, other))
            {
                return true;
            }

            if (other.GetType() != GetType())
            {
                return false;
            }

            return (global::StrawberryShake.Helper.ComparisonHelper.SequenceEqual(Edges, other.Edges));
        }

        public override global::System.Boolean Equals(global::System.Object? obj)
        {
            if (ReferenceEquals(null, obj))
            {
                return false;
            }

            if (ReferenceEquals(this, obj))
            {
                return true;
            }

            if (obj.GetType() != GetType())
            {
                return false;
            }

            return Equals((GetHero_Hero_Friends_CharacterConnection)obj);
        }

        public override global::System.Int32 GetHashCode()
        {
            unchecked
            {
                int hash = 5;
                if (Edges != null)
                {
                    foreach (var Edges_elm in Edges)
                    {
                        hash ^= 397 * Edges_elm.GetHashCode();
                    }
                }

                return hash;
            }
        }
    }

    /// <summary>
    /// An edge in a connection.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public partial class GetHero_Hero_Friends_Edges_CharacterEdge : global::System.IEquatable<GetHero_Hero_Friends_Edges_CharacterEdge>, IGetHero_Hero_Friends_Edges_CharacterEdge
    {
        public GetHero_Hero_Friends_Edges_CharacterEdge(global::StarWarsGeneratedClient.IGetHero_Hero_Friends_Edges_Node? node)
        {
            Node = node;
        }

        /// <summary>
        /// The item at the end of the edge.
        /// </summary>
        public global::StarWarsGeneratedClient.IGetHero_Hero_Friends_Edges_Node? Node { get; }

        public virtual global::System.Boolean Equals(GetHero_Hero_Friends_Edges_CharacterEdge? other)
        {
            if (ReferenceEquals(null, other))
            {
                return false;
            }

            if (ReferenceEquals(this, other))
            {
                return true;
            }

            if (other.GetType() != GetType())
            {
                return false;
            }

            return (((Node is null && other.Node is null) || Node != null && Node.Equals(other.Node)));
        }

        public override global::System.Boolean Equals(global::System.Object? obj)
        {
            if (ReferenceEquals(null, obj))
            {
                return false;
            }

            if (ReferenceEquals(this, obj))
            {
                return true;
            }

            if (obj.GetType() != GetType())
            {
                return false;
            }

            return Equals((GetHero_Hero_Friends_Edges_CharacterEdge)obj);
        }

        public override global::System.Int32 GetHashCode()
        {
            unchecked
            {
                int hash = 5;
                if (Node != null)
                {
                    hash ^= 397 * Node.GetHashCode();
                }

                return hash;
            }
        }
    }

    /// <summary>
    /// This resolver class extends all object types implementing ICharacter.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public partial class GetHero_Hero_Friends_Edges_Node_Human : global::System.IEquatable<GetHero_Hero_Friends_Edges_Node_Human>, IGetHero_Hero_Friends_Edges_Node_Human
    {
        public GetHero_Hero_Friends_Edges_Node_Human(global::System.Int32 id, global::System.String name)
        {
            Id = id;
            Name = name;
        }

        /// <summary>
        /// The unique identifier for the character.
        /// </summary>
        public global::System.Int32 Id { get; }

        /// <summary>
        /// The name of the character.
        /// </summary>
        public global::System.String Name { get; }

        public virtual global::System.Boolean Equals(GetHero_Hero_Friends_Edges_Node_Human? other)
        {
            if (ReferenceEquals(null, other))
            {
                return false;
            }

            if (ReferenceEquals(this, other))
            {
                return true;
            }

            if (other.GetType() != GetType())
            {
                return false;
            }

            return (Id == other.Id) && Name.Equals(other.Name);
        }

        public override global::System.Boolean Equals(global::System.Object? obj)
        {
            if (ReferenceEquals(null, obj))
            {
                return false;
            }

            if (ReferenceEquals(this, obj))
            {
                return true;
            }

            if (obj.GetType() != GetType())
            {
                return false;
            }

            return Equals((GetHero_Hero_Friends_Edges_Node_Human)obj);
        }

        public override global::System.Int32 GetHashCode()
        {
            unchecked
            {
                int hash = 5;
                hash ^= 397 * Id.GetHashCode();
                hash ^= 397 * Name.GetHashCode();
                return hash;
            }
        }
    }

    /// <summary>
    /// This resolver class extends all object types implementing ICharacter.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public partial class GetHero_Hero_Friends_Edges_Node_Droid : global::System.IEquatable<GetHero_Hero_Friends_Edges_Node_Droid>, IGetHero_Hero_Friends_Edges_Node_Droid
    {
        public GetHero_Hero_Friends_Edges_Node_Droid(global::System.Int32 id, global::System.String name)
        {
            Id = id;
            Name = name;
        }

        /// <summary>
        /// The unique identifier for the character.
        /// </summary>
        public global::System.Int32 Id { get; }

        /// <summary>
        /// The name of the character.
        /// </summary>
        public global::System.String Name { get; }

        public virtual global::System.Boolean Equals(GetHero_Hero_Friends_Edges_Node_Droid? other)
        {
            if (ReferenceEquals(null, other))
            {
                return false;
            }

            if (ReferenceEquals(this, other))
            {
                return true;
            }

            if (other.GetType() != GetType())
            {
                return false;
            }

            return (Id == other.Id) && Name.Equals(other.Name);
        }

        public override global::System.Boolean Equals(global::System.Object? obj)
        {
            if (ReferenceEquals(null, obj))
            {
                return false;
            }

            if (ReferenceEquals(this, obj))
            {
                return true;
            }

            if (obj.GetType() != GetType())
            {
                return false;
            }

            return Equals((GetHero_Hero_Friends_Edges_Node_Droid)obj);
        }

        public override global::System.Int32 GetHashCode()
        {
            unchecked
            {
                int hash = 5;
                hash ^= 397 * Id.GetHashCode();
                hash ^= 397 * Name.GetHashCode();
                return hash;
            }
        }
    }

    /// <summary>
    /// The queries related to reviews.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public interface IGetHeroResult
    {
        /// <summary>
        /// Retrieve a hero by a particular Star Wars episode.
        /// 
        /// 
        /// **Returns:**
        /// The hero character.
        /// </summary>
        public global::StarWarsGeneratedClient.IGetHero_Hero Hero { get; }
    }

    /// <summary>
    /// A character in the Star Wars universe.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public interface IGetHero_Hero
    {
        /// <summary>
        /// The unique identifier for the character.
        /// </summary>
        public global::System.Int32 Id { get; }

        /// <summary>
        /// The name of the character.
        /// </summary>
        public global::System.String Name { get; }

        /// <summary>
        /// The ids of the character's friends.
        /// </summary>
        public global::StarWarsGeneratedClient.IGetHero_Hero_Friends? Friends { get; }
    }

    /// <summary>
    /// This resolver class extends all object types implementing ICharacter.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public interface IGetHero_Hero_Human : IGetHero_Hero
    {
    }

    /// <summary>
    /// This resolver class extends all object types implementing ICharacter.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public interface IGetHero_Hero_Droid : IGetHero_Hero
    {
    }

    /// <summary>
    /// A connection to a list of items.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public interface IGetHero_Hero_Friends
    {
        /// <summary>
        /// A list of edges.
        /// </summary>
        public global::System.Collections.Generic.IReadOnlyList<global::StarWarsGeneratedClient.IGetHero_Hero_Friends_Edges>? Edges { get; }
    }

    /// <summary>
    /// A connection to a list of items.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public interface IGetHero_Hero_Friends_CharacterConnection : IGetHero_Hero_Friends
    {
    }

    /// <summary>
    /// An edge in a connection.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public interface IGetHero_Hero_Friends_Edges
    {
        /// <summary>
        /// The item at the end of the edge.
        /// </summary>
        public global::StarWarsGeneratedClient.IGetHero_Hero_Friends_Edges_Node? Node { get; }
    }

    /// <summary>
    /// An edge in a connection.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public interface IGetHero_Hero_Friends_Edges_CharacterEdge : IGetHero_Hero_Friends_Edges
    {
    }

    /// <summary>
    /// A character in the Star Wars universe.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public interface IGetHero_Hero_Friends_Edges_Node
    {
        /// <summary>
        /// The unique identifier for the character.
        /// </summary>
        public global::System.Int32 Id { get; }

        /// <summary>
        /// The name of the character.
        /// </summary>
        public global::System.String Name { get; }
    }

    /// <summary>
    /// This resolver class extends all object types implementing ICharacter.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public interface IGetHero_Hero_Friends_Edges_Node_Human : IGetHero_Hero_Friends_Edges_Node
    {
    }

    /// <summary>
    /// This resolver class extends all object types implementing ICharacter.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public interface IGetHero_Hero_Friends_Edges_Node_Droid : IGetHero_Hero_Friends_Edges_Node
    {
    }

    /// <summary>
    /// The queries related to reviews.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public partial class GetCharactersResult : global::System.IEquatable<GetCharactersResult>, IGetCharactersResult
    {
        public GetCharactersResult(global::System.Collections.Generic.IReadOnlyList<global::StarWarsGeneratedClient.IGetCharacters_Character> character)
        {
            Character = character;
        }

        /// <summary>
        /// Gets a character by it`s id.
        /// 
        /// 
        /// **Returns:**
        /// The character.
        /// </summary>
        public global::System.Collections.Generic.IReadOnlyList<global::StarWarsGeneratedClient.IGetCharacters_Character> Character { get; }

        public virtual global::System.Boolean Equals(GetCharactersResult? other)
        {
            if (ReferenceEquals(null, other))
            {
                return false;
            }

            if (ReferenceEquals(this, other))
            {
                return true;
            }

            if (other.GetType() != GetType())
            {
                return false;
            }

            return (global::StrawberryShake.Helper.ComparisonHelper.SequenceEqual(Character, other.Character));
        }

        public override global::System.Boolean Equals(global::System.Object? obj)
        {
            if (ReferenceEquals(null, obj))
            {
                return false;
            }

            if (ReferenceEquals(this, obj))
            {
                return true;
            }

            if (obj.GetType() != GetType())
            {
                return false;
            }

            return Equals((GetCharactersResult)obj);
        }

        public override global::System.Int32 GetHashCode()
        {
            unchecked
            {
                int hash = 5;
                foreach (var Character_elm in Character)
                {
                    hash ^= 397 * Character_elm.GetHashCode();
                }

                return hash;
            }
        }
    }

    /// <summary>
    /// This resolver class extends all object types implementing ICharacter.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public partial class GetCharacters_Character_Human : global::System.IEquatable<GetCharacters_Character_Human>, IGetCharacters_Character_Human
    {
        public GetCharacters_Character_Human(global::System.Int32 id, global::System.String name)
        {
            Id = id;
            Name = name;
        }

        /// <summary>
        /// The unique identifier for the character.
        /// </summary>
        public global::System.Int32 Id { get; }

        /// <summary>
        /// The name of the character.
        /// </summary>
        public global::System.String Name { get; }

        public virtual global::System.Boolean Equals(GetCharacters_Character_Human? other)
        {
            if (ReferenceEquals(null, other))
            {
                return false;
            }

            if (ReferenceEquals(this, other))
            {
                return true;
            }

            if (other.GetType() != GetType())
            {
                return false;
            }

            return (Id == other.Id) && Name.Equals(other.Name);
        }

        public override global::System.Boolean Equals(global::System.Object? obj)
        {
            if (ReferenceEquals(null, obj))
            {
                return false;
            }

            if (ReferenceEquals(this, obj))
            {
                return true;
            }

            if (obj.GetType() != GetType())
            {
                return false;
            }

            return Equals((GetCharacters_Character_Human)obj);
        }

        public override global::System.Int32 GetHashCode()
        {
            unchecked
            {
                int hash = 5;
                hash ^= 397 * Id.GetHashCode();
                hash ^= 397 * Name.GetHashCode();
                return hash;
            }
        }
    }

    /// <summary>
    /// This resolver class extends all object types implementing ICharacter.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public partial class GetCharacters_Character_Droid : global::System.IEquatable<GetCharacters_Character_Droid>, IGetCharacters_Character_Droid
    {
        public GetCharacters_Character_Droid(global::System.Int32 id, global::System.String name)
        {
            Id = id;
            Name = name;
        }

        /// <summary>
        /// The unique identifier for the character.
        /// </summary>
        public global::System.Int32 Id { get; }

        /// <summary>
        /// The name of the character.
        /// </summary>
        public global::System.String Name { get; }

        public virtual global::System.Boolean Equals(GetCharacters_Character_Droid? other)
        {
            if (ReferenceEquals(null, other))
            {
                return false;
            }

            if (ReferenceEquals(this, other))
            {
                return true;
            }

            if (other.GetType() != GetType())
            {
                return false;
            }

            return (Id == other.Id) && Name.Equals(other.Name);
        }

        public override global::System.Boolean Equals(global::System.Object? obj)
        {
            if (ReferenceEquals(null, obj))
            {
                return false;
            }

            if (ReferenceEquals(this, obj))
            {
                return true;
            }

            if (obj.GetType() != GetType())
            {
                return false;
            }

            return Equals((GetCharacters_Character_Droid)obj);
        }

        public override global::System.Int32 GetHashCode()
        {
            unchecked
            {
                int hash = 5;
                hash ^= 397 * Id.GetHashCode();
                hash ^= 397 * Name.GetHashCode();
                return hash;
            }
        }
    }

    /// <summary>
    /// The queries related to reviews.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public interface IGetCharactersResult
    {
        /// <summary>
        /// Gets a character by it`s id.
        /// 
        /// 
        /// **Returns:**
        /// The character.
        /// </summary>
        public global::System.Collections.Generic.IReadOnlyList<global::StarWarsGeneratedClient.IGetCharacters_Character> Character { get; }
    }

    /// <summary>
    /// A character in the Star Wars universe.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public interface IGetCharacters_Character
    {
        /// <summary>
        /// The unique identifier for the character.
        /// </summary>
        public global::System.Int32 Id { get; }

        /// <summary>
        /// The name of the character.
        /// </summary>
        public global::System.String Name { get; }
    }

    /// <summary>
    /// This resolver class extends all object types implementing ICharacter.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public interface IGetCharacters_Character_Human : IGetCharacters_Character
    {
    }

    /// <summary>
    /// This resolver class extends all object types implementing ICharacter.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public interface IGetCharacters_Character_Droid : IGetCharacters_Character
    {
    }

    /// <summary>
    /// The mutations related to reviews.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public partial class CreateReviewResult : global::System.IEquatable<CreateReviewResult>, ICreateReviewResult
    {
        public CreateReviewResult(global::StarWarsGeneratedClient.ICreateReview_CreateReview createReview)
        {
            CreateReview = createReview;
        }

        /// <summary>
        /// Creates a review for a given Star Wars episode.
        /// </summary>
        public global::StarWarsGeneratedClient.ICreateReview_CreateReview CreateReview { get; }

        public virtual global::System.Boolean Equals(CreateReviewResult? other)
        {
            if (ReferenceEquals(null, other))
            {
                return false;
            }

            if (ReferenceEquals(this, other))
            {
                return true;
            }

            if (other.GetType() != GetType())
            {
                return false;
            }

            return (CreateReview.Equals(other.CreateReview));
        }

        public override global::System.Boolean Equals(global::System.Object? obj)
        {
            if (ReferenceEquals(null, obj))
            {
                return false;
            }

            if (ReferenceEquals(this, obj))
            {
                return true;
            }

            if (obj.GetType() != GetType())
            {
                return false;
            }

            return Equals((CreateReviewResult)obj);
        }

        public override global::System.Int32 GetHashCode()
        {
            unchecked
            {
                int hash = 5;
                hash ^= 397 * CreateReview.GetHashCode();
                return hash;
            }
        }
    }

    /// <summary>
    /// This payload allows us to query the created review object.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public partial class CreateReview_CreateReview_CreateReviewPayload : global::System.IEquatable<CreateReview_CreateReview_CreateReviewPayload>, ICreateReview_CreateReview_CreateReviewPayload
    {
        public CreateReview_CreateReview_CreateReviewPayload(global::StarWarsGeneratedClient.ICreateReview_CreateReview_Review review)
        {
            Review = review;
        }

        /// <summary>
        /// The review that was being created.
        /// </summary>
        public global::StarWarsGeneratedClient.ICreateReview_CreateReview_Review Review { get; }

        public virtual global::System.Boolean Equals(CreateReview_CreateReview_CreateReviewPayload? other)
        {
            if (ReferenceEquals(null, other))
            {
                return false;
            }

            if (ReferenceEquals(this, other))
            {
                return true;
            }

            if (other.GetType() != GetType())
            {
                return false;
            }

            return (Review.Equals(other.Review));
        }

        public override global::System.Boolean Equals(global::System.Object? obj)
        {
            if (ReferenceEquals(null, obj))
            {
                return false;
            }

            if (ReferenceEquals(this, obj))
            {
                return true;
            }

            if (obj.GetType() != GetType())
            {
                return false;
            }

            return Equals((CreateReview_CreateReview_CreateReviewPayload)obj);
        }

        public override global::System.Int32 GetHashCode()
        {
            unchecked
            {
                int hash = 5;
                hash ^= 397 * Review.GetHashCode();
                return hash;
            }
        }
    }

    /// <summary>
    /// A review of a particular movie.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public partial class CreateReview_CreateReview_Review_Review : global::System.IEquatable<CreateReview_CreateReview_Review_Review>, ICreateReview_CreateReview_Review_Review
    {
        public CreateReview_CreateReview_Review_Review(global::System.String commentary, global::System.Int32 stars)
        {
            Commentary = commentary;
            Stars = stars;
        }

        /// <summary>
        /// An explanation for the rating.
        /// </summary>
        public global::System.String Commentary { get; }

        /// <summary>
        /// The number of stars given for this review.
        /// </summary>
        public global::System.Int32 Stars { get; }

        public virtual global::System.Boolean Equals(CreateReview_CreateReview_Review_Review? other)
        {
            if (ReferenceEquals(null, other))
            {
                return false;
            }

            if (ReferenceEquals(this, other))
            {
                return true;
            }

            if (other.GetType() != GetType())
            {
                return false;
            }

            return (Commentary.Equals(other.Commentary)) && Stars == other.Stars;
        }

        public override global::System.Boolean Equals(global::System.Object? obj)
        {
            if (ReferenceEquals(null, obj))
            {
                return false;
            }

            if (ReferenceEquals(this, obj))
            {
                return true;
            }

            if (obj.GetType() != GetType())
            {
                return false;
            }

            return Equals((CreateReview_CreateReview_Review_Review)obj);
        }

        public override global::System.Int32 GetHashCode()
        {
            unchecked
            {
                int hash = 5;
                hash ^= 397 * Commentary.GetHashCode();
                hash ^= 397 * Stars.GetHashCode();
                return hash;
            }
        }
    }

    /// <summary>
    /// The mutations related to reviews.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public interface ICreateReviewResult
    {
        /// <summary>
        /// Creates a review for a given Star Wars episode.
        /// </summary>
        public global::StarWarsGeneratedClient.ICreateReview_CreateReview CreateReview { get; }
    }

    /// <summary>
    /// This payload allows us to query the created review object.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public interface ICreateReview_CreateReview
    {
        /// <summary>
        /// The review that was being created.
        /// </summary>
        public global::StarWarsGeneratedClient.ICreateReview_CreateReview_Review Review { get; }
    }

    /// <summary>
    /// This payload allows us to query the created review object.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public interface ICreateReview_CreateReview_CreateReviewPayload : ICreateReview_CreateReview
    {
    }

    /// <summary>
    /// A review of a particular movie.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public interface ICreateReview_CreateReview_Review
    {
        /// <summary>
        /// An explanation for the rating.
        /// </summary>
        public global::System.String Commentary { get; }

        /// <summary>
        /// The number of stars given for this review.
        /// </summary>
        public global::System.Int32 Stars { get; }
    }

    /// <summary>
    /// A review of a particular movie.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public interface ICreateReview_CreateReview_Review_Review : ICreateReview_CreateReview_Review
    {
    }

    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public partial class CreateReviewInputInputValueFormatter : global::StrawberryShake.Serialization.IInputObjectFormatter
    {
        private global::StrawberryShake.Serialization.IInputValueFormatter _episodeFormatter = default !;
        private global::StrawberryShake.Serialization.IInputValueFormatter _intFormatter = default !;
        private global::StrawberryShake.Serialization.IInputValueFormatter _stringFormatter = default !;
        public global::System.String TypeName => "CreateReviewInput";
        public void Initialize(global::StrawberryShake.Serialization.ISerializerResolver serializerResolver)
        {
            _episodeFormatter = serializerResolver.GetInputValueFormatter("Episode");
            _intFormatter = serializerResolver.GetInputValueFormatter("Int");
            _stringFormatter = serializerResolver.GetInputValueFormatter("String");
        }

        public global::System.Object? Format(global::System.Object? runtimeValue)
        {
            if (runtimeValue is null)
            {
                return null;
            }

            var input = runtimeValue as global::StarWarsGeneratedClient.CreateReviewInput;
            var inputInfo = runtimeValue as global::StarWarsGeneratedClient.State.ICreateReviewInputInfo;
            if (input is null || inputInfo is null)
            {
                throw new global::System.ArgumentException(nameof(runtimeValue));
            }

            var fields = new global::System.Collections.Generic.List<global::System.Collections.Generic.KeyValuePair<global::System.String, global::System.Object?>>();
            if (inputInfo.IsEpisodeSet)
            {
                fields.Add(new global::System.Collections.Generic.KeyValuePair<global::System.String, global::System.Object?>("episode", FormatEpisode(input.Episode)));
            }

            if (inputInfo.IsStarsSet)
            {
                fields.Add(new global::System.Collections.Generic.KeyValuePair<global::System.String, global::System.Object?>("stars", FormatStars(input.Stars)));
            }

            if (inputInfo.IsCommentarySet)
            {
                fields.Add(new global::System.Collections.Generic.KeyValuePair<global::System.String, global::System.Object?>("commentary", FormatCommentary(input.Commentary)));
            }

            return fields;
        }

        private global::System.Object? FormatEpisode(global::StarWarsGeneratedClient.Episode input)
        {
            return _episodeFormatter.Format(input);
        }

        private global::System.Object? FormatStars(global::System.Int32 input)
        {
            return _intFormatter.Format(input);
        }

        private global::System.Object? FormatCommentary(global::System.String input)
        {
            if (input is null)
            {
                throw new global::System.ArgumentNullException(nameof(input));
            }

            return _stringFormatter.Format(input);
        }
    }

    ///<summary>This input represents the data needed to create a review.</summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public partial class CreateReviewInput : global::StarWarsGeneratedClient.State.ICreateReviewInputInfo, global::System.IEquatable<CreateReviewInput>
    {
        public override global::System.Boolean Equals(global::System.Object? obj)
        {
            if (ReferenceEquals(null, obj))
            {
                return false;
            }

            if (ReferenceEquals(this, obj))
            {
                return true;
            }

            if (obj.GetType() != GetType())
            {
                return false;
            }

            return Equals((CreateReviewInput)obj);
        }

        public virtual global::System.Boolean Equals(CreateReviewInput? other)
        {
            if (ReferenceEquals(null, other))
            {
                return false;
            }

            if (ReferenceEquals(this, other))
            {
                return true;
            }

            if (other.GetType() != GetType())
            {
                return false;
            }

            return (Episode.Equals(other.Episode)) && Stars == other.Stars && Commentary.Equals(other.Commentary);
        }

        public override global::System.Int32 GetHashCode()
        {
            unchecked
            {
                int hash = 5;
                hash ^= 397 * Episode.GetHashCode();
                hash ^= 397 * Stars.GetHashCode();
                hash ^= 397 * Commentary.GetHashCode();
                return hash;
            }
        }

        private global::StarWarsGeneratedClient.Episode _value_episode;
        private global::System.Boolean _set_episode;
        private global::System.Int32 _value_stars;
        private global::System.Boolean _set_stars;
        private global::System.String _value_commentary = default !;
        private global::System.Boolean _set_commentary;
        ///<summary>The review for which to create the review.</summary>
        public global::StarWarsGeneratedClient.Episode Episode
        {
            get => _value_episode;
            set
            {
                _set_episode = true;
                _value_episode = value;
            }
        }

        global::System.Boolean global::StarWarsGeneratedClient.State.ICreateReviewInputInfo.IsEpisodeSet => _set_episode;
        ///<summary>The number of stars given for this review.</summary>
        public global::System.Int32 Stars
        {
            get => _value_stars;
            set
            {
                _set_stars = true;
                _value_stars = value;
            }
        }

        global::System.Boolean global::StarWarsGeneratedClient.State.ICreateReviewInputInfo.IsStarsSet => _set_stars;
        ///<summary>An explanation for the rating.</summary>
        public global::System.String Commentary
        {
            get => _value_commentary;
            set
            {
                _set_commentary = true;
                _value_commentary = value;
            }
        }

        global::System.Boolean global::StarWarsGeneratedClient.State.ICreateReviewInputInfo.IsCommentarySet => _set_commentary;
    }

    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public enum Episode
    {
        /// <summary>
        /// Star Wars Episode IV: A New Hope
        /// </summary>
        NewHope,
        /// <summary>
        /// Star Wars Episode V: Empire Strikes Back
        /// </summary>
        Empire,
        /// <summary>
        /// Star Wars Episode VI: Return of the Jedi
        /// </summary>
        Jedi
    }

    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public partial class EpisodeSerializer : global::StrawberryShake.Serialization.IInputValueFormatter, global::StrawberryShake.Serialization.ILeafValueParser<global::System.String, Episode>
    {
        public global::System.String TypeName => "Episode";
        public Episode Parse(global::System.String serializedValue)
        {
            return serializedValue switch
            {
            "NEW_HOPE" => Episode.NewHope, "EMPIRE" => Episode.Empire, "JEDI" => Episode.Jedi, _ => throw new global::StrawberryShake.GraphQLClientException()}

            ;
        }

        public global::System.Object Format(global::System.Object? runtimeValue)
        {
            return runtimeValue switch
            {
            Episode.NewHope => "NEW_HOPE", Episode.Empire => "EMPIRE", Episode.Jedi => "JEDI", _ => throw new global::StrawberryShake.GraphQLClientException()}

            ;
        }
    }

    /// <summary>
    /// Represents the operation service of the GetHero GraphQL operation
    /// <code>
    /// query GetHero($episode: Episode!) {
    ///   hero(episode: $episode) {
    ///     __typename
    ///     id
    ///     name
    ///     friends {
    ///       __typename
    ///       edges {
    ///         __typename
    ///         node {
    ///           __typename
    ///           id
    ///           name
    ///           ... on Human {
    ///             id
    ///           }
    ///           ... on Droid {
    ///             id
    ///           }
    ///         }
    ///       }
    ///     }
    ///     ... on Human {
    ///       id
    ///     }
    ///     ... on Droid {
    ///       id
    ///     }
    ///   }
    /// }
    /// </code>
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public partial class GetHeroQueryDocument : global::StrawberryShake.IDocument
    {
        private GetHeroQueryDocument()
        {
        }

        public static GetHeroQueryDocument Instance { get; } = new GetHeroQueryDocument();
        public global::StrawberryShake.OperationKind Kind => global::StrawberryShake.OperationKind.Query;
        public global::System.ReadOnlySpan<global::System.Byte> Body => new global::System.Byte[]{0x71, 0x75, 0x65, 0x72, 0x79, 0x20, 0x47, 0x65, 0x74, 0x48, 0x65, 0x72, 0x6f, 0x28, 0x24, 0x65, 0x70, 0x69, 0x73, 0x6f, 0x64, 0x65, 0x3a, 0x20, 0x45, 0x70, 0x69, 0x73, 0x6f, 0x64, 0x65, 0x21, 0x29, 0x20, 0x7b, 0x20, 0x68, 0x65, 0x72, 0x6f, 0x28, 0x65, 0x70, 0x69, 0x73, 0x6f, 0x64, 0x65, 0x3a, 0x20, 0x24, 0x65, 0x70, 0x69, 0x73, 0x6f, 0x64, 0x65, 0x29, 0x20, 0x7b, 0x20, 0x5f, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x20, 0x69, 0x64, 0x20, 0x6e, 0x61, 0x6d, 0x65, 0x20, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x20, 0x7b, 0x20, 0x5f, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x20, 0x65, 0x64, 0x67, 0x65, 0x73, 0x20, 0x7b, 0x20, 0x5f, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x20, 0x6e, 0x6f, 0x64, 0x65, 0x20, 0x7b, 0x20, 0x5f, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x20, 0x69, 0x64, 0x20, 0x6e, 0x61, 0x6d, 0x65, 0x20, 0x2e, 0x2e, 0x2e, 0x20, 0x6f, 0x6e, 0x20, 0x48, 0x75, 0x6d, 0x61, 0x6e, 0x20, 0x7b, 0x20, 0x69, 0x64, 0x20, 0x7d, 0x20, 0x2e, 0x2e, 0x2e, 0x20, 0x6f, 0x6e, 0x20, 0x44, 0x72, 0x6f, 0x69, 0x64, 0x20, 0x7b, 0x20, 0x69, 0x64, 0x20, 0x7d, 0x20, 0x7d, 0x20, 0x7d, 0x20, 0x7d, 0x20, 0x2e, 0x2e, 0x2e, 0x20, 0x6f, 0x6e, 0x20, 0x48, 0x75, 0x6d, 0x61, 0x6e, 0x20, 0x7b, 0x20, 0x69, 0x64, 0x20, 0x7d, 0x20, 0x2e, 0x2e, 0x2e, 0x20, 0x6f, 0x6e, 0x20, 0x44, 0x72, 0x6f, 0x69, 0x64, 0x20, 0x7b, 0x20, 0x69, 0x64, 0x20, 0x7d, 0x20, 0x7d, 0x20, 0x7d};
        public global::StrawberryShake.DocumentHash Hash { get; } = new global::StrawberryShake.DocumentHash("md5Hash", "2add160266d9d7ed4ea876ffaeddffea");
        public override global::System.String ToString()
        {
#if NETSTANDARD2_0
        return global::System.Text.Encoding.UTF8.GetString(Body.ToArray());
#else
            return global::System.Text.Encoding.UTF8.GetString(Body);
#endif
        }
    }

    /// <summary>
    /// Represents the operation service of the GetHero GraphQL operation
    /// <code>
    /// query GetHero($episode: Episode!) {
    ///   hero(episode: $episode) {
    ///     __typename
    ///     id
    ///     name
    ///     friends {
    ///       __typename
    ///       edges {
    ///         __typename
    ///         node {
    ///           __typename
    ///           id
    ///           name
    ///           ... on Human {
    ///             id
    ///           }
    ///           ... on Droid {
    ///             id
    ///           }
    ///         }
    ///       }
    ///     }
    ///     ... on Human {
    ///       id
    ///     }
    ///     ... on Droid {
    ///       id
    ///     }
    ///   }
    /// }
    /// </code>
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public partial class GetHeroQuery : global::StarWarsGeneratedClient.IGetHeroQuery
    {
        private readonly global::StrawberryShake.IOperationExecutor<IGetHeroResult> _operationExecutor;
        private readonly global::StrawberryShake.Serialization.IInputValueFormatter _episodeFormatter;
        public GetHeroQuery(global::StrawberryShake.IOperationExecutor<IGetHeroResult> operationExecutor, global::StrawberryShake.Serialization.ISerializerResolver serializerResolver)
        {
            _operationExecutor = operationExecutor ?? throw new global::System.ArgumentNullException(nameof(operationExecutor));
            _episodeFormatter = serializerResolver.GetInputValueFormatter("Episode");
        }

        global::System.Type global::StrawberryShake.IOperationRequestFactory.ResultType => typeof(IGetHeroResult);
        public async global::System.Threading.Tasks.Task<global::StrawberryShake.IOperationResult<IGetHeroResult>> ExecuteAsync(global::StarWarsGeneratedClient.Episode episode, global::System.Threading.CancellationToken cancellationToken = default)
        {
            var request = CreateRequest(episode);
            return await _operationExecutor.ExecuteAsync(request, cancellationToken).ConfigureAwait(false);
        }

        public global::System.IObservable<global::StrawberryShake.IOperationResult<IGetHeroResult>> Watch(global::StarWarsGeneratedClient.Episode episode, global::StrawberryShake.ExecutionStrategy? strategy = null)
        {
            var request = CreateRequest(episode);
            return _operationExecutor.Watch(request, strategy);
        }

        private global::StrawberryShake.OperationRequest CreateRequest(global::StarWarsGeneratedClient.Episode episode)
        {
            var variables = new global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object?>();
            variables.Add("episode", FormatEpisode(episode));
            return CreateRequest(variables);
        }

        private global::StrawberryShake.OperationRequest CreateRequest(global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object?>? variables)
        {
            return new global::StrawberryShake.OperationRequest(id: GetHeroQueryDocument.Instance.Hash.Value, name: "GetHero", document: GetHeroQueryDocument.Instance, strategy: global::StrawberryShake.RequestStrategy.Default, variables: variables);
        }

        private global::System.Object? FormatEpisode(global::StarWarsGeneratedClient.Episode value)
        {
            return _episodeFormatter.Format(value);
        }

        global::StrawberryShake.OperationRequest global::StrawberryShake.IOperationRequestFactory.Create(global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object?>? variables)
        {
            return CreateRequest(variables!);
        }
    }

    /// <summary>
    /// Represents the operation service of the GetHero GraphQL operation
    /// <code>
    /// query GetHero($episode: Episode!) {
    ///   hero(episode: $episode) {
    ///     __typename
    ///     id
    ///     name
    ///     friends {
    ///       __typename
    ///       edges {
    ///         __typename
    ///         node {
    ///           __typename
    ///           id
    ///           name
    ///           ... on Human {
    ///             id
    ///           }
    ///           ... on Droid {
    ///             id
    ///           }
    ///         }
    ///       }
    ///     }
    ///     ... on Human {
    ///       id
    ///     }
    ///     ... on Droid {
    ///       id
    ///     }
    ///   }
    /// }
    /// </code>
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public interface IGetHeroQuery : global::StrawberryShake.IOperationRequestFactory
    {
        global::System.Threading.Tasks.Task<global::StrawberryShake.IOperationResult<IGetHeroResult>> ExecuteAsync(global::StarWarsGeneratedClient.Episode episode, global::System.Threading.CancellationToken cancellationToken = default);
        global::System.IObservable<global::StrawberryShake.IOperationResult<IGetHeroResult>> Watch(global::StarWarsGeneratedClient.Episode episode, global::StrawberryShake.ExecutionStrategy? strategy = null);
    }

    /// <summary>
    /// Represents the operation service of the GetCharacters GraphQL operation
    /// <code>
    /// query GetCharacters($ids: [Int!]!) {
    ///   character(ids: $ids) {
    ///     __typename
    ///     id
    ///     name
    ///     ... on Human {
    ///       id
    ///     }
    ///     ... on Droid {
    ///       id
    ///     }
    ///   }
    /// }
    /// </code>
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public partial class GetCharactersQueryDocument : global::StrawberryShake.IDocument
    {
        private GetCharactersQueryDocument()
        {
        }

        public static GetCharactersQueryDocument Instance { get; } = new GetCharactersQueryDocument();
        public global::StrawberryShake.OperationKind Kind => global::StrawberryShake.OperationKind.Query;
        public global::System.ReadOnlySpan<global::System.Byte> Body => new global::System.Byte[]{0x71, 0x75, 0x65, 0x72, 0x79, 0x20, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x73, 0x28, 0x24, 0x69, 0x64, 0x73, 0x3a, 0x20, 0x5b, 0x49, 0x6e, 0x74, 0x21, 0x5d, 0x21, 0x29, 0x20, 0x7b, 0x20, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x28, 0x69, 0x64, 0x73, 0x3a, 0x20, 0x24, 0x69, 0x64, 0x73, 0x29, 0x20, 0x7b, 0x20, 0x5f, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x20, 0x69, 0x64, 0x20, 0x6e, 0x61, 0x6d, 0x65, 0x20, 0x2e, 0x2e, 0x2e, 0x20, 0x6f, 0x6e, 0x20, 0x48, 0x75, 0x6d, 0x61, 0x6e, 0x20, 0x7b, 0x20, 0x69, 0x64, 0x20, 0x7d, 0x20, 0x2e, 0x2e, 0x2e, 0x20, 0x6f, 0x6e, 0x20, 0x44, 0x72, 0x6f, 0x69, 0x64, 0x20, 0x7b, 0x20, 0x69, 0x64, 0x20, 0x7d, 0x20, 0x7d, 0x20, 0x7d};
        public global::StrawberryShake.DocumentHash Hash { get; } = new global::StrawberryShake.DocumentHash("md5Hash", "9dead78d4aae7639f7baa5c1baf58b85");
        public override global::System.String ToString()
        {
#if NETSTANDARD2_0
        return global::System.Text.Encoding.UTF8.GetString(Body.ToArray());
#else
            return global::System.Text.Encoding.UTF8.GetString(Body);
#endif
        }
    }

    /// <summary>
    /// Represents the operation service of the GetCharacters GraphQL operation
    /// <code>
    /// query GetCharacters($ids: [Int!]!) {
    ///   character(ids: $ids) {
    ///     __typename
    ///     id
    ///     name
    ///     ... on Human {
    ///       id
    ///     }
    ///     ... on Droid {
    ///       id
    ///     }
    ///   }
    /// }
    /// </code>
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public partial class GetCharactersQuery : global::StarWarsGeneratedClient.IGetCharactersQuery
    {
        private readonly global::StrawberryShake.IOperationExecutor<IGetCharactersResult> _operationExecutor;
        private readonly global::StrawberryShake.Serialization.IInputValueFormatter _intFormatter;
        public GetCharactersQuery(global::StrawberryShake.IOperationExecutor<IGetCharactersResult> operationExecutor, global::StrawberryShake.Serialization.ISerializerResolver serializerResolver)
        {
            _operationExecutor = operationExecutor ?? throw new global::System.ArgumentNullException(nameof(operationExecutor));
            _intFormatter = serializerResolver.GetInputValueFormatter("Int");
        }

        global::System.Type global::StrawberryShake.IOperationRequestFactory.ResultType => typeof(IGetCharactersResult);
        public async global::System.Threading.Tasks.Task<global::StrawberryShake.IOperationResult<IGetCharactersResult>> ExecuteAsync(global::System.Collections.Generic.IReadOnlyList<global::System.Int32> ids, global::System.Threading.CancellationToken cancellationToken = default)
        {
            var request = CreateRequest(ids);
            return await _operationExecutor.ExecuteAsync(request, cancellationToken).ConfigureAwait(false);
        }

        public global::System.IObservable<global::StrawberryShake.IOperationResult<IGetCharactersResult>> Watch(global::System.Collections.Generic.IReadOnlyList<global::System.Int32> ids, global::StrawberryShake.ExecutionStrategy? strategy = null)
        {
            var request = CreateRequest(ids);
            return _operationExecutor.Watch(request, strategy);
        }

        private global::StrawberryShake.OperationRequest CreateRequest(global::System.Collections.Generic.IReadOnlyList<global::System.Int32> ids)
        {
            var variables = new global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object?>();
            variables.Add("ids", FormatIds(ids));
            return CreateRequest(variables);
        }

        private global::StrawberryShake.OperationRequest CreateRequest(global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object?>? variables)
        {
            return new global::StrawberryShake.OperationRequest(id: GetCharactersQueryDocument.Instance.Hash.Value, name: "GetCharacters", document: GetCharactersQueryDocument.Instance, strategy: global::StrawberryShake.RequestStrategy.Default, variables: variables);
        }

        private global::System.Object? FormatIds(global::System.Collections.Generic.IReadOnlyList<global::System.Int32> value)
        {
            var value_list = new global::System.Collections.Generic.List<global::System.Object?>();
            foreach (var value_elm in value)
            {
                value_list.Add(_intFormatter.Format(value_elm));
            }

            return value_list;
        }

        global::StrawberryShake.OperationRequest global::StrawberryShake.IOperationRequestFactory.Create(global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object?>? variables)
        {
            return CreateRequest(variables!);
        }
    }

    /// <summary>
    /// Represents the operation service of the GetCharacters GraphQL operation
    /// <code>
    /// query GetCharacters($ids: [Int!]!) {
    ///   character(ids: $ids) {
    ///     __typename
    ///     id
    ///     name
    ///     ... on Human {
    ///       id
    ///     }
    ///     ... on Droid {
    ///       id
    ///     }
    ///   }
    /// }
    /// </code>
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public interface IGetCharactersQuery : global::StrawberryShake.IOperationRequestFactory
    {
        global::System.Threading.Tasks.Task<global::StrawberryShake.IOperationResult<IGetCharactersResult>> ExecuteAsync(global::System.Collections.Generic.IReadOnlyList<global::System.Int32> ids, global::System.Threading.CancellationToken cancellationToken = default);
        global::System.IObservable<global::StrawberryShake.IOperationResult<IGetCharactersResult>> Watch(global::System.Collections.Generic.IReadOnlyList<global::System.Int32> ids, global::StrawberryShake.ExecutionStrategy? strategy = null);
    }

    /// <summary>
    /// Represents the operation service of the CreateReview GraphQL operation
    /// <code>
    /// mutation CreateReview($review: CreateReviewInput!) {
    ///   createReview(input: $review) {
    ///     __typename
    ///     review {
    ///       __typename
    ///       commentary
    ///       stars
    ///       ... on Review {
    ///         id
    ///       }
    ///     }
    ///   }
    /// }
    /// </code>
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public partial class CreateReviewMutationDocument : global::StrawberryShake.IDocument
    {
        private CreateReviewMutationDocument()
        {
        }

        public static CreateReviewMutationDocument Instance { get; } = new CreateReviewMutationDocument();
        public global::StrawberryShake.OperationKind Kind => global::StrawberryShake.OperationKind.Mutation;
        public global::System.ReadOnlySpan<global::System.Byte> Body => new global::System.Byte[]{0x6d, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x28, 0x24, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x3a, 0x20, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x21, 0x29, 0x20, 0x7b, 0x20, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x28, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x3a, 0x20, 0x24, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x29, 0x20, 0x7b, 0x20, 0x5f, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x20, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x20, 0x7b, 0x20, 0x5f, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x20, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x72, 0x79, 0x20, 0x73, 0x74, 0x61, 0x72, 0x73, 0x20, 0x2e, 0x2e, 0x2e, 0x20, 0x6f, 0x6e, 0x20, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x20, 0x7b, 0x20, 0x69, 0x64, 0x20, 0x7d, 0x20, 0x7d, 0x20, 0x7d, 0x20, 0x7d};
        public global::StrawberryShake.DocumentHash Hash { get; } = new global::StrawberryShake.DocumentHash("md5Hash", "5b6a783649dc31c687682aa24df735d0");
        public override global::System.String ToString()
        {
#if NETSTANDARD2_0
        return global::System.Text.Encoding.UTF8.GetString(Body.ToArray());
#else
            return global::System.Text.Encoding.UTF8.GetString(Body);
#endif
        }
    }

    /// <summary>
    /// Represents the operation service of the CreateReview GraphQL operation
    /// <code>
    /// mutation CreateReview($review: CreateReviewInput!) {
    ///   createReview(input: $review) {
    ///     __typename
    ///     review {
    ///       __typename
    ///       commentary
    ///       stars
    ///       ... on Review {
    ///         id
    ///       }
    ///     }
    ///   }
    /// }
    /// </code>
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public partial class CreateReviewMutation : global::StarWarsGeneratedClient.ICreateReviewMutation
    {
        private readonly global::StrawberryShake.IOperationExecutor<ICreateReviewResult> _operationExecutor;
        private readonly global::StrawberryShake.Serialization.IInputValueFormatter _createReviewInputFormatter;
        public CreateReviewMutation(global::StrawberryShake.IOperationExecutor<ICreateReviewResult> operationExecutor, global::StrawberryShake.Serialization.ISerializerResolver serializerResolver)
        {
            _operationExecutor = operationExecutor ?? throw new global::System.ArgumentNullException(nameof(operationExecutor));
            _createReviewInputFormatter = serializerResolver.GetInputValueFormatter("CreateReviewInput");
        }

        global::System.Type global::StrawberryShake.IOperationRequestFactory.ResultType => typeof(ICreateReviewResult);
        public async global::System.Threading.Tasks.Task<global::StrawberryShake.IOperationResult<ICreateReviewResult>> ExecuteAsync(global::StarWarsGeneratedClient.CreateReviewInput review, global::System.Threading.CancellationToken cancellationToken = default)
        {
            var request = CreateRequest(review);
            return await _operationExecutor.ExecuteAsync(request, cancellationToken).ConfigureAwait(false);
        }

        public global::System.IObservable<global::StrawberryShake.IOperationResult<ICreateReviewResult>> Watch(global::StarWarsGeneratedClient.CreateReviewInput review, global::StrawberryShake.ExecutionStrategy? strategy = null)
        {
            var request = CreateRequest(review);
            return _operationExecutor.Watch(request, strategy);
        }

        private global::StrawberryShake.OperationRequest CreateRequest(global::StarWarsGeneratedClient.CreateReviewInput review)
        {
            var variables = new global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object?>();
            variables.Add("review", FormatReview(review));
            return CreateRequest(variables);
        }

        private global::StrawberryShake.OperationRequest CreateRequest(global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object?>? variables)
        {
            return new global::StrawberryShake.OperationRequest(id: CreateReviewMutationDocument.Instance.Hash.Value, name: "CreateReview", document: CreateReviewMutationDocument.Instance, strategy: global::StrawberryShake.RequestStrategy.Default, variables: variables);
        }

        private global::System.Object? FormatReview(global::StarWarsGeneratedClient.CreateReviewInput value)
        {
            if (value is null)
            {
                throw new global::System.ArgumentNullException(nameof(value));
            }

            return _createReviewInputFormatter.Format(value);
        }

        global::StrawberryShake.OperationRequest global::StrawberryShake.IOperationRequestFactory.Create(global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object?>? variables)
        {
            return CreateRequest(variables!);
        }
    }

    /// <summary>
    /// Represents the operation service of the CreateReview GraphQL operation
    /// <code>
    /// mutation CreateReview($review: CreateReviewInput!) {
    ///   createReview(input: $review) {
    ///     __typename
    ///     review {
    ///       __typename
    ///       commentary
    ///       stars
    ///       ... on Review {
    ///         id
    ///       }
    ///     }
    ///   }
    /// }
    /// </code>
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public interface ICreateReviewMutation : global::StrawberryShake.IOperationRequestFactory
    {
        global::System.Threading.Tasks.Task<global::StrawberryShake.IOperationResult<ICreateReviewResult>> ExecuteAsync(global::StarWarsGeneratedClient.CreateReviewInput review, global::System.Threading.CancellationToken cancellationToken = default);
        global::System.IObservable<global::StrawberryShake.IOperationResult<ICreateReviewResult>> Watch(global::StarWarsGeneratedClient.CreateReviewInput review, global::StrawberryShake.ExecutionStrategy? strategy = null);
    }

    /// <summary>
    /// Represents the StarWarsGeneratedClient GraphQL client
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public partial class StarWarsGeneratedClient : global::StarWarsGeneratedClient.IStarWarsGeneratedClient
    {
        private readonly global::StarWarsGeneratedClient.IGetHeroQuery _getHero;
        private readonly global::StarWarsGeneratedClient.IGetCharactersQuery _getCharacters;
        private readonly global::StarWarsGeneratedClient.ICreateReviewMutation _createReview;
        public StarWarsGeneratedClient(global::StarWarsGeneratedClient.IGetHeroQuery getHero, global::StarWarsGeneratedClient.IGetCharactersQuery getCharacters, global::StarWarsGeneratedClient.ICreateReviewMutation createReview)
        {
            _getHero = getHero ?? throw new global::System.ArgumentNullException(nameof(getHero));
            _getCharacters = getCharacters ?? throw new global::System.ArgumentNullException(nameof(getCharacters));
            _createReview = createReview ?? throw new global::System.ArgumentNullException(nameof(createReview));
        }

        public static global::System.String ClientName => "StarWarsGeneratedClient";
        public global::StarWarsGeneratedClient.IGetHeroQuery GetHero => _getHero;
        public global::StarWarsGeneratedClient.IGetCharactersQuery GetCharacters => _getCharacters;
        public global::StarWarsGeneratedClient.ICreateReviewMutation CreateReview => _createReview;
    }

    /// <summary>
    /// Represents the StarWarsGeneratedClient GraphQL client
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public interface IStarWarsGeneratedClient
    {
        global::StarWarsGeneratedClient.IGetHeroQuery GetHero { get; }

        global::StarWarsGeneratedClient.IGetCharactersQuery GetCharacters { get; }

        global::StarWarsGeneratedClient.ICreateReviewMutation CreateReview { get; }
    }
}

namespace StarWarsGeneratedClient.State
{
    ///<summary>This resolver class extends all object types implementing ICharacter.</summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public partial class HumanEntity
    {
        public HumanEntity(global::System.Int32 id = default !, global::System.String name = default !, global::StarWarsGeneratedClient.State.CharacterConnectionData? friends = default !)
        {
            Id = id;
            Name = name;
            Friends = friends;
        }

        ///<summary>The unique identifier for the character.</summary>
        public global::System.Int32 Id { get; }

        ///<summary>The name of the character.</summary>
        public global::System.String Name { get; }

        public global::StarWarsGeneratedClient.State.CharacterConnectionData? Friends { get; }
    }

    ///<summary>This resolver class extends all object types implementing ICharacter.</summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public partial class DroidEntity
    {
        public DroidEntity(global::System.Int32 id = default !, global::System.String name = default !, global::StarWarsGeneratedClient.State.CharacterConnectionData? friends = default !)
        {
            Id = id;
            Name = name;
            Friends = friends;
        }

        ///<summary>The unique identifier for the character.</summary>
        public global::System.Int32 Id { get; }

        ///<summary>The name of the character.</summary>
        public global::System.String Name { get; }

        public global::StarWarsGeneratedClient.State.CharacterConnectionData? Friends { get; }
    }

    ///<summary>A review of a particular movie.</summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public partial class ReviewEntity
    {
        public ReviewEntity(global::System.String commentary = default !, global::System.Int32 stars = default !)
        {
            Commentary = commentary;
            Stars = stars;
        }

        ///<summary>An explanation for the rating.</summary>
        public global::System.String Commentary { get; }

        ///<summary>The number of stars given for this review.</summary>
        public global::System.Int32 Stars { get; }
    }

    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public partial class GetHeroResultFactory : global::StrawberryShake.IOperationResultDataFactory<global::StarWarsGeneratedClient.GetHeroResult>
    {
        private readonly global::StrawberryShake.IEntityStore _entityStore;
        private readonly global::StrawberryShake.IEntityMapper<global::StarWarsGeneratedClient.State.HumanEntity, GetHero_Hero_Human> _getHero_Hero_HumanFromHumanEntityMapper;
        private readonly global::StrawberryShake.IEntityMapper<global::StarWarsGeneratedClient.State.DroidEntity, GetHero_Hero_Droid> _getHero_Hero_DroidFromDroidEntityMapper;
        public GetHeroResultFactory(global::StrawberryShake.IEntityStore entityStore, global::StrawberryShake.IEntityMapper<global::StarWarsGeneratedClient.State.HumanEntity, GetHero_Hero_Human> getHero_Hero_HumanFromHumanEntityMapper, global::StrawberryShake.IEntityMapper<global::StarWarsGeneratedClient.State.DroidEntity, GetHero_Hero_Droid> getHero_Hero_DroidFromDroidEntityMapper)
        {
            _entityStore = entityStore ?? throw new global::System.ArgumentNullException(nameof(entityStore));
            _getHero_Hero_HumanFromHumanEntityMapper = getHero_Hero_HumanFromHumanEntityMapper ?? throw new global::System.ArgumentNullException(nameof(getHero_Hero_HumanFromHumanEntityMapper));
            _getHero_Hero_DroidFromDroidEntityMapper = getHero_Hero_DroidFromDroidEntityMapper ?? throw new global::System.ArgumentNullException(nameof(getHero_Hero_DroidFromDroidEntityMapper));
        }

        global::System.Type global::StrawberryShake.IOperationResultDataFactory.ResultType => typeof(global::StarWarsGeneratedClient.IGetHeroResult);
        public GetHeroResult Create(global::StrawberryShake.IOperationResultDataInfo dataInfo, global::StrawberryShake.IEntityStoreSnapshot? snapshot = null)
        {
            if (snapshot is null)
            {
                snapshot = _entityStore.CurrentSnapshot;
            }

            if (dataInfo is GetHeroResultInfo info)
            {
                return new GetHeroResult(MapNonNullableIGetHero_Hero(info.Hero, snapshot));
            }

            throw new global::System.ArgumentException("GetHeroResultInfo expected.");
        }

        private global::StarWarsGeneratedClient.IGetHero_Hero MapNonNullableIGetHero_Hero(global::StrawberryShake.EntityId entityId, global::StrawberryShake.IEntityStoreSnapshot snapshot)
        {
            if (entityId.Name.Equals("Human", global::System.StringComparison.Ordinal))
            {
                return _getHero_Hero_HumanFromHumanEntityMapper.Map(snapshot.GetEntity<global::StarWarsGeneratedClient.State.HumanEntity>(entityId) ?? throw new global::StrawberryShake.GraphQLClientException());
            }

            if (entityId.Name.Equals("Droid", global::System.StringComparison.Ordinal))
            {
                return _getHero_Hero_DroidFromDroidEntityMapper.Map(snapshot.GetEntity<global::StarWarsGeneratedClient.State.DroidEntity>(entityId) ?? throw new global::StrawberryShake.GraphQLClientException());
            }

            throw new global::System.NotSupportedException();
        }

        global::System.Object global::StrawberryShake.IOperationResultDataFactory.Create(global::StrawberryShake.IOperationResultDataInfo dataInfo, global::StrawberryShake.IEntityStoreSnapshot? snapshot)
        {
            return Create(dataInfo, snapshot);
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public partial class GetHeroResultInfo : global::StrawberryShake.IOperationResultDataInfo
    {
        private readonly global::System.Collections.Generic.IReadOnlyCollection<global::StrawberryShake.EntityId> _entityIds;
        private readonly global::System.UInt64 _version;
        public GetHeroResultInfo(global::StrawberryShake.EntityId hero, global::System.Collections.Generic.IReadOnlyCollection<global::StrawberryShake.EntityId> entityIds, global::System.UInt64 version)
        {
            Hero = hero;
            _entityIds = entityIds ?? throw new global::System.ArgumentNullException(nameof(entityIds));
            _version = version;
        }

        /// <summary>
        /// Retrieve a hero by a particular Star Wars episode.
        /// 
        /// 
        /// **Returns:**
        /// The hero character.
        /// </summary>
        public global::StrawberryShake.EntityId Hero { get; }

        public global::System.Collections.Generic.IReadOnlyCollection<global::StrawberryShake.EntityId> EntityIds => _entityIds;
        public global::System.UInt64 Version => _version;
        public global::StrawberryShake.IOperationResultDataInfo WithVersion(global::System.UInt64 version)
        {
            return new GetHeroResultInfo(Hero, _entityIds, version);
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public partial class GetHero_Hero_HumanFromHumanEntityMapper : global::StrawberryShake.IEntityMapper<global::StarWarsGeneratedClient.State.HumanEntity, GetHero_Hero_Human>
    {
        private readonly global::StrawberryShake.IEntityStore _entityStore;
        private readonly global::StrawberryShake.IEntityMapper<global::StarWarsGeneratedClient.State.HumanEntity, GetHero_Hero_Friends_Edges_Node_Human> _getHero_Hero_Friends_Edges_Node_HumanFromHumanEntityMapper;
        private readonly global::StrawberryShake.IEntityMapper<global::StarWarsGeneratedClient.State.DroidEntity, GetHero_Hero_Friends_Edges_Node_Droid> _getHero_Hero_Friends_Edges_Node_DroidFromDroidEntityMapper;
        public GetHero_Hero_HumanFromHumanEntityMapper(global::StrawberryShake.IEntityStore entityStore, global::StrawberryShake.IEntityMapper<global::StarWarsGeneratedClient.State.HumanEntity, GetHero_Hero_Friends_Edges_Node_Human> getHero_Hero_Friends_Edges_Node_HumanFromHumanEntityMapper, global::StrawberryShake.IEntityMapper<global::StarWarsGeneratedClient.State.DroidEntity, GetHero_Hero_Friends_Edges_Node_Droid> getHero_Hero_Friends_Edges_Node_DroidFromDroidEntityMapper)
        {
            _entityStore = entityStore ?? throw new global::System.ArgumentNullException(nameof(entityStore));
            _getHero_Hero_Friends_Edges_Node_HumanFromHumanEntityMapper = getHero_Hero_Friends_Edges_Node_HumanFromHumanEntityMapper ?? throw new global::System.ArgumentNullException(nameof(getHero_Hero_Friends_Edges_Node_HumanFromHumanEntityMapper));
            _getHero_Hero_Friends_Edges_Node_DroidFromDroidEntityMapper = getHero_Hero_Friends_Edges_Node_DroidFromDroidEntityMapper ?? throw new global::System.ArgumentNullException(nameof(getHero_Hero_Friends_Edges_Node_DroidFromDroidEntityMapper));
        }

        public GetHero_Hero_Human Map(global::StarWarsGeneratedClient.State.HumanEntity entity, global::StrawberryShake.IEntityStoreSnapshot? snapshot = null)
        {
            if (snapshot is null)
            {
                snapshot = _entityStore.CurrentSnapshot;
            }

            return new GetHero_Hero_Human(entity.Id, entity.Name, MapIGetHero_Hero_Friends(entity.Friends, snapshot));
        }

        private global::StarWarsGeneratedClient.IGetHero_Hero_Friends? MapIGetHero_Hero_Friends(global::StarWarsGeneratedClient.State.CharacterConnectionData? data, global::StrawberryShake.IEntityStoreSnapshot snapshot)
        {
            if (data is null)
            {
                return null;
            }

            IGetHero_Hero_Friends returnValue = default !;
            if (data?.__typename.Equals("CharacterConnection", global::System.StringComparison.Ordinal) ?? false)
            {
                returnValue = new GetHero_Hero_Friends_CharacterConnection(MapIGetHero_Hero_Friends_EdgesNonNullableArray(data.Edges, snapshot));
            }
            else
            {
                throw new global::System.NotSupportedException();
            }

            return returnValue;
        }

        private global::System.Collections.Generic.IReadOnlyList<global::StarWarsGeneratedClient.IGetHero_Hero_Friends_Edges>? MapIGetHero_Hero_Friends_EdgesNonNullableArray(global::System.Collections.Generic.IReadOnlyList<global::StarWarsGeneratedClient.State.CharacterEdgeData>? list, global::StrawberryShake.IEntityStoreSnapshot snapshot)
        {
            if (list is null)
            {
                return null;
            }

            var characterEdges = new global::System.Collections.Generic.List<global::StarWarsGeneratedClient.IGetHero_Hero_Friends_Edges>();
            foreach (global::StarWarsGeneratedClient.State.CharacterEdgeData child in list)
            {
                characterEdges.Add(MapNonNullableIGetHero_Hero_Friends_Edges(child, snapshot));
            }

            return characterEdges;
        }

        private global::StarWarsGeneratedClient.IGetHero_Hero_Friends_Edges MapNonNullableIGetHero_Hero_Friends_Edges(global::StarWarsGeneratedClient.State.CharacterEdgeData data, global::StrawberryShake.IEntityStoreSnapshot snapshot)
        {
            IGetHero_Hero_Friends_Edges returnValue = default !;
            if (data.__typename.Equals("CharacterEdge", global::System.StringComparison.Ordinal))
            {
                returnValue = new GetHero_Hero_Friends_Edges_CharacterEdge(MapIGetHero_Hero_Friends_Edges_Node(data.Node, snapshot));
            }
            else
            {
                throw new global::System.NotSupportedException();
            }

            return returnValue;
        }

        private global::StarWarsGeneratedClient.IGetHero_Hero_Friends_Edges_Node? MapIGetHero_Hero_Friends_Edges_Node(global::StrawberryShake.EntityId? entityId, global::StrawberryShake.IEntityStoreSnapshot snapshot)
        {
            if (entityId is null)
            {
                return null;
            }

            if (entityId.Value.Name.Equals("Human", global::System.StringComparison.Ordinal))
            {
                return _getHero_Hero_Friends_Edges_Node_HumanFromHumanEntityMapper.Map(snapshot.GetEntity<global::StarWarsGeneratedClient.State.HumanEntity>(entityId.Value) ?? throw new global::StrawberryShake.GraphQLClientException());
            }

            if (entityId.Value.Name.Equals("Droid", global::System.StringComparison.Ordinal))
            {
                return _getHero_Hero_Friends_Edges_Node_DroidFromDroidEntityMapper.Map(snapshot.GetEntity<global::StarWarsGeneratedClient.State.DroidEntity>(entityId.Value) ?? throw new global::StrawberryShake.GraphQLClientException());
            }

            throw new global::System.NotSupportedException();
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public partial class GetHero_Hero_DroidFromDroidEntityMapper : global::StrawberryShake.IEntityMapper<global::StarWarsGeneratedClient.State.DroidEntity, GetHero_Hero_Droid>
    {
        private readonly global::StrawberryShake.IEntityStore _entityStore;
        private readonly global::StrawberryShake.IEntityMapper<global::StarWarsGeneratedClient.State.HumanEntity, GetHero_Hero_Friends_Edges_Node_Human> _getHero_Hero_Friends_Edges_Node_HumanFromHumanEntityMapper;
        private readonly global::StrawberryShake.IEntityMapper<global::StarWarsGeneratedClient.State.DroidEntity, GetHero_Hero_Friends_Edges_Node_Droid> _getHero_Hero_Friends_Edges_Node_DroidFromDroidEntityMapper;
        public GetHero_Hero_DroidFromDroidEntityMapper(global::StrawberryShake.IEntityStore entityStore, global::StrawberryShake.IEntityMapper<global::StarWarsGeneratedClient.State.HumanEntity, GetHero_Hero_Friends_Edges_Node_Human> getHero_Hero_Friends_Edges_Node_HumanFromHumanEntityMapper, global::StrawberryShake.IEntityMapper<global::StarWarsGeneratedClient.State.DroidEntity, GetHero_Hero_Friends_Edges_Node_Droid> getHero_Hero_Friends_Edges_Node_DroidFromDroidEntityMapper)
        {
            _entityStore = entityStore ?? throw new global::System.ArgumentNullException(nameof(entityStore));
            _getHero_Hero_Friends_Edges_Node_HumanFromHumanEntityMapper = getHero_Hero_Friends_Edges_Node_HumanFromHumanEntityMapper ?? throw new global::System.ArgumentNullException(nameof(getHero_Hero_Friends_Edges_Node_HumanFromHumanEntityMapper));
            _getHero_Hero_Friends_Edges_Node_DroidFromDroidEntityMapper = getHero_Hero_Friends_Edges_Node_DroidFromDroidEntityMapper ?? throw new global::System.ArgumentNullException(nameof(getHero_Hero_Friends_Edges_Node_DroidFromDroidEntityMapper));
        }

        public GetHero_Hero_Droid Map(global::StarWarsGeneratedClient.State.DroidEntity entity, global::StrawberryShake.IEntityStoreSnapshot? snapshot = null)
        {
            if (snapshot is null)
            {
                snapshot = _entityStore.CurrentSnapshot;
            }

            return new GetHero_Hero_Droid(entity.Id, entity.Name, MapIGetHero_Hero_Friends(entity.Friends, snapshot));
        }

        private global::StarWarsGeneratedClient.IGetHero_Hero_Friends? MapIGetHero_Hero_Friends(global::StarWarsGeneratedClient.State.CharacterConnectionData? data, global::StrawberryShake.IEntityStoreSnapshot snapshot)
        {
            if (data is null)
            {
                return null;
            }

            IGetHero_Hero_Friends returnValue = default !;
            if (data?.__typename.Equals("CharacterConnection", global::System.StringComparison.Ordinal) ?? false)
            {
                returnValue = new GetHero_Hero_Friends_CharacterConnection(MapIGetHero_Hero_Friends_EdgesNonNullableArray(data.Edges, snapshot));
            }
            else
            {
                throw new global::System.NotSupportedException();
            }

            return returnValue;
        }

        private global::System.Collections.Generic.IReadOnlyList<global::StarWarsGeneratedClient.IGetHero_Hero_Friends_Edges>? MapIGetHero_Hero_Friends_EdgesNonNullableArray(global::System.Collections.Generic.IReadOnlyList<global::StarWarsGeneratedClient.State.CharacterEdgeData>? list, global::StrawberryShake.IEntityStoreSnapshot snapshot)
        {
            if (list is null)
            {
                return null;
            }

            var characterEdges = new global::System.Collections.Generic.List<global::StarWarsGeneratedClient.IGetHero_Hero_Friends_Edges>();
            foreach (global::StarWarsGeneratedClient.State.CharacterEdgeData child in list)
            {
                characterEdges.Add(MapNonNullableIGetHero_Hero_Friends_Edges(child, snapshot));
            }

            return characterEdges;
        }

        private global::StarWarsGeneratedClient.IGetHero_Hero_Friends_Edges MapNonNullableIGetHero_Hero_Friends_Edges(global::StarWarsGeneratedClient.State.CharacterEdgeData data, global::StrawberryShake.IEntityStoreSnapshot snapshot)
        {
            IGetHero_Hero_Friends_Edges returnValue = default !;
            if (data.__typename.Equals("CharacterEdge", global::System.StringComparison.Ordinal))
            {
                returnValue = new GetHero_Hero_Friends_Edges_CharacterEdge(MapIGetHero_Hero_Friends_Edges_Node(data.Node, snapshot));
            }
            else
            {
                throw new global::System.NotSupportedException();
            }

            return returnValue;
        }

        private global::StarWarsGeneratedClient.IGetHero_Hero_Friends_Edges_Node? MapIGetHero_Hero_Friends_Edges_Node(global::StrawberryShake.EntityId? entityId, global::StrawberryShake.IEntityStoreSnapshot snapshot)
        {
            if (entityId is null)
            {
                return null;
            }

            if (entityId.Value.Name.Equals("Human", global::System.StringComparison.Ordinal))
            {
                return _getHero_Hero_Friends_Edges_Node_HumanFromHumanEntityMapper.Map(snapshot.GetEntity<global::StarWarsGeneratedClient.State.HumanEntity>(entityId.Value) ?? throw new global::StrawberryShake.GraphQLClientException());
            }

            if (entityId.Value.Name.Equals("Droid", global::System.StringComparison.Ordinal))
            {
                return _getHero_Hero_Friends_Edges_Node_DroidFromDroidEntityMapper.Map(snapshot.GetEntity<global::StarWarsGeneratedClient.State.DroidEntity>(entityId.Value) ?? throw new global::StrawberryShake.GraphQLClientException());
            }

            throw new global::System.NotSupportedException();
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public partial class GetHero_Hero_Friends_Edges_Node_HumanFromHumanEntityMapper : global::StrawberryShake.IEntityMapper<global::StarWarsGeneratedClient.State.HumanEntity, GetHero_Hero_Friends_Edges_Node_Human>
    {
        private readonly global::StrawberryShake.IEntityStore _entityStore;
        public GetHero_Hero_Friends_Edges_Node_HumanFromHumanEntityMapper(global::StrawberryShake.IEntityStore entityStore)
        {
            _entityStore = entityStore ?? throw new global::System.ArgumentNullException(nameof(entityStore));
        }

        public GetHero_Hero_Friends_Edges_Node_Human Map(global::StarWarsGeneratedClient.State.HumanEntity entity, global::StrawberryShake.IEntityStoreSnapshot? snapshot = null)
        {
            if (snapshot is null)
            {
                snapshot = _entityStore.CurrentSnapshot;
            }

            return new GetHero_Hero_Friends_Edges_Node_Human(entity.Id, entity.Name);
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public partial class GetHero_Hero_Friends_Edges_Node_DroidFromDroidEntityMapper : global::StrawberryShake.IEntityMapper<global::StarWarsGeneratedClient.State.DroidEntity, GetHero_Hero_Friends_Edges_Node_Droid>
    {
        private readonly global::StrawberryShake.IEntityStore _entityStore;
        public GetHero_Hero_Friends_Edges_Node_DroidFromDroidEntityMapper(global::StrawberryShake.IEntityStore entityStore)
        {
            _entityStore = entityStore ?? throw new global::System.ArgumentNullException(nameof(entityStore));
        }

        public GetHero_Hero_Friends_Edges_Node_Droid Map(global::StarWarsGeneratedClient.State.DroidEntity entity, global::StrawberryShake.IEntityStoreSnapshot? snapshot = null)
        {
            if (snapshot is null)
            {
                snapshot = _entityStore.CurrentSnapshot;
            }

            return new GetHero_Hero_Friends_Edges_Node_Droid(entity.Id, entity.Name);
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public partial class GetCharactersResultFactory : global::StrawberryShake.IOperationResultDataFactory<global::StarWarsGeneratedClient.GetCharactersResult>
    {
        private readonly global::StrawberryShake.IEntityStore _entityStore;
        private readonly global::StrawberryShake.IEntityMapper<global::StarWarsGeneratedClient.State.HumanEntity, GetCharacters_Character_Human> _getCharacters_Character_HumanFromHumanEntityMapper;
        private readonly global::StrawberryShake.IEntityMapper<global::StarWarsGeneratedClient.State.DroidEntity, GetCharacters_Character_Droid> _getCharacters_Character_DroidFromDroidEntityMapper;
        public GetCharactersResultFactory(global::StrawberryShake.IEntityStore entityStore, global::StrawberryShake.IEntityMapper<global::StarWarsGeneratedClient.State.HumanEntity, GetCharacters_Character_Human> getCharacters_Character_HumanFromHumanEntityMapper, global::StrawberryShake.IEntityMapper<global::StarWarsGeneratedClient.State.DroidEntity, GetCharacters_Character_Droid> getCharacters_Character_DroidFromDroidEntityMapper)
        {
            _entityStore = entityStore ?? throw new global::System.ArgumentNullException(nameof(entityStore));
            _getCharacters_Character_HumanFromHumanEntityMapper = getCharacters_Character_HumanFromHumanEntityMapper ?? throw new global::System.ArgumentNullException(nameof(getCharacters_Character_HumanFromHumanEntityMapper));
            _getCharacters_Character_DroidFromDroidEntityMapper = getCharacters_Character_DroidFromDroidEntityMapper ?? throw new global::System.ArgumentNullException(nameof(getCharacters_Character_DroidFromDroidEntityMapper));
        }

        global::System.Type global::StrawberryShake.IOperationResultDataFactory.ResultType => typeof(global::StarWarsGeneratedClient.IGetCharactersResult);
        public GetCharactersResult Create(global::StrawberryShake.IOperationResultDataInfo dataInfo, global::StrawberryShake.IEntityStoreSnapshot? snapshot = null)
        {
            if (snapshot is null)
            {
                snapshot = _entityStore.CurrentSnapshot;
            }

            if (dataInfo is GetCharactersResultInfo info)
            {
                return new GetCharactersResult(MapNonNullableIGetCharacters_CharacterNonNullableArray(info.Character, snapshot));
            }

            throw new global::System.ArgumentException("GetCharactersResultInfo expected.");
        }

        private global::System.Collections.Generic.IReadOnlyList<global::StarWarsGeneratedClient.IGetCharacters_Character> MapNonNullableIGetCharacters_CharacterNonNullableArray(global::System.Collections.Generic.IReadOnlyList<global::StrawberryShake.EntityId>? list, global::StrawberryShake.IEntityStoreSnapshot snapshot)
        {
            if (list is null)
            {
                throw new global::System.ArgumentNullException();
            }

            var characters = new global::System.Collections.Generic.List<global::StarWarsGeneratedClient.IGetCharacters_Character>();
            foreach (global::StrawberryShake.EntityId child in list)
            {
                characters.Add(MapNonNullableIGetCharacters_Character(child, snapshot));
            }

            return characters;
        }

        private global::StarWarsGeneratedClient.IGetCharacters_Character MapNonNullableIGetCharacters_Character(global::StrawberryShake.EntityId entityId, global::StrawberryShake.IEntityStoreSnapshot snapshot)
        {
            if (entityId.Name.Equals("Human", global::System.StringComparison.Ordinal))
            {
                return _getCharacters_Character_HumanFromHumanEntityMapper.Map(snapshot.GetEntity<global::StarWarsGeneratedClient.State.HumanEntity>(entityId) ?? throw new global::StrawberryShake.GraphQLClientException());
            }

            if (entityId.Name.Equals("Droid", global::System.StringComparison.Ordinal))
            {
                return _getCharacters_Character_DroidFromDroidEntityMapper.Map(snapshot.GetEntity<global::StarWarsGeneratedClient.State.DroidEntity>(entityId) ?? throw new global::StrawberryShake.GraphQLClientException());
            }

            throw new global::System.NotSupportedException();
        }

        global::System.Object global::StrawberryShake.IOperationResultDataFactory.Create(global::StrawberryShake.IOperationResultDataInfo dataInfo, global::StrawberryShake.IEntityStoreSnapshot? snapshot)
        {
            return Create(dataInfo, snapshot);
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public partial class GetCharactersResultInfo : global::StrawberryShake.IOperationResultDataInfo
    {
        private readonly global::System.Collections.Generic.IReadOnlyCollection<global::StrawberryShake.EntityId> _entityIds;
        private readonly global::System.UInt64 _version;
        public GetCharactersResultInfo(global::System.Collections.Generic.IReadOnlyList<global::StrawberryShake.EntityId> character, global::System.Collections.Generic.IReadOnlyCollection<global::StrawberryShake.EntityId> entityIds, global::System.UInt64 version)
        {
            Character = character;
            _entityIds = entityIds ?? throw new global::System.ArgumentNullException(nameof(entityIds));
            _version = version;
        }

        /// <summary>
        /// Gets a character by it`s id.
        /// 
        /// 
        /// **Returns:**
        /// The character.
        /// </summary>
        public global::System.Collections.Generic.IReadOnlyList<global::StrawberryShake.EntityId> Character { get; }

        public global::System.Collections.Generic.IReadOnlyCollection<global::StrawberryShake.EntityId> EntityIds => _entityIds;
        public global::System.UInt64 Version => _version;
        public global::StrawberryShake.IOperationResultDataInfo WithVersion(global::System.UInt64 version)
        {
            return new GetCharactersResultInfo(Character, _entityIds, version);
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public partial class GetCharacters_Character_HumanFromHumanEntityMapper : global::StrawberryShake.IEntityMapper<global::StarWarsGeneratedClient.State.HumanEntity, GetCharacters_Character_Human>
    {
        private readonly global::StrawberryShake.IEntityStore _entityStore;
        public GetCharacters_Character_HumanFromHumanEntityMapper(global::StrawberryShake.IEntityStore entityStore)
        {
            _entityStore = entityStore ?? throw new global::System.ArgumentNullException(nameof(entityStore));
        }

        public GetCharacters_Character_Human Map(global::StarWarsGeneratedClient.State.HumanEntity entity, global::StrawberryShake.IEntityStoreSnapshot? snapshot = null)
        {
            if (snapshot is null)
            {
                snapshot = _entityStore.CurrentSnapshot;
            }

            return new GetCharacters_Character_Human(entity.Id, entity.Name);
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public partial class GetCharacters_Character_DroidFromDroidEntityMapper : global::StrawberryShake.IEntityMapper<global::StarWarsGeneratedClient.State.DroidEntity, GetCharacters_Character_Droid>
    {
        private readonly global::StrawberryShake.IEntityStore _entityStore;
        public GetCharacters_Character_DroidFromDroidEntityMapper(global::StrawberryShake.IEntityStore entityStore)
        {
            _entityStore = entityStore ?? throw new global::System.ArgumentNullException(nameof(entityStore));
        }

        public GetCharacters_Character_Droid Map(global::StarWarsGeneratedClient.State.DroidEntity entity, global::StrawberryShake.IEntityStoreSnapshot? snapshot = null)
        {
            if (snapshot is null)
            {
                snapshot = _entityStore.CurrentSnapshot;
            }

            return new GetCharacters_Character_Droid(entity.Id, entity.Name);
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public partial class CreateReviewResultFactory : global::StrawberryShake.IOperationResultDataFactory<global::StarWarsGeneratedClient.CreateReviewResult>
    {
        private readonly global::StrawberryShake.IEntityStore _entityStore;
        private readonly global::StrawberryShake.IEntityMapper<global::StarWarsGeneratedClient.State.ReviewEntity, CreateReview_CreateReview_Review_Review> _createReview_CreateReview_Review_ReviewFromReviewEntityMapper;
        public CreateReviewResultFactory(global::StrawberryShake.IEntityStore entityStore, global::StrawberryShake.IEntityMapper<global::StarWarsGeneratedClient.State.ReviewEntity, CreateReview_CreateReview_Review_Review> createReview_CreateReview_Review_ReviewFromReviewEntityMapper)
        {
            _entityStore = entityStore ?? throw new global::System.ArgumentNullException(nameof(entityStore));
            _createReview_CreateReview_Review_ReviewFromReviewEntityMapper = createReview_CreateReview_Review_ReviewFromReviewEntityMapper ?? throw new global::System.ArgumentNullException(nameof(createReview_CreateReview_Review_ReviewFromReviewEntityMapper));
        }

        global::System.Type global::StrawberryShake.IOperationResultDataFactory.ResultType => typeof(global::StarWarsGeneratedClient.ICreateReviewResult);
        public CreateReviewResult Create(global::StrawberryShake.IOperationResultDataInfo dataInfo, global::StrawberryShake.IEntityStoreSnapshot? snapshot = null)
        {
            if (snapshot is null)
            {
                snapshot = _entityStore.CurrentSnapshot;
            }

            if (dataInfo is CreateReviewResultInfo info)
            {
                return new CreateReviewResult(MapNonNullableICreateReview_CreateReview(info.CreateReview, snapshot));
            }

            throw new global::System.ArgumentException("CreateReviewResultInfo expected.");
        }

        private global::StarWarsGeneratedClient.ICreateReview_CreateReview MapNonNullableICreateReview_CreateReview(global::StarWarsGeneratedClient.State.CreateReviewPayloadData data, global::StrawberryShake.IEntityStoreSnapshot snapshot)
        {
            ICreateReview_CreateReview returnValue = default !;
            if (data.__typename.Equals("CreateReviewPayload", global::System.StringComparison.Ordinal))
            {
                returnValue = new CreateReview_CreateReview_CreateReviewPayload(MapNonNullableICreateReview_CreateReview_Review(data.Review ?? throw new global::System.ArgumentNullException(), snapshot));
            }
            else
            {
                throw new global::System.NotSupportedException();
            }

            return returnValue;
        }

        private global::StarWarsGeneratedClient.ICreateReview_CreateReview_Review MapNonNullableICreateReview_CreateReview_Review(global::StrawberryShake.EntityId entityId, global::StrawberryShake.IEntityStoreSnapshot snapshot)
        {
            if (entityId.Name.Equals("Review", global::System.StringComparison.Ordinal))
            {
                return _createReview_CreateReview_Review_ReviewFromReviewEntityMapper.Map(snapshot.GetEntity<global::StarWarsGeneratedClient.State.ReviewEntity>(entityId) ?? throw new global::StrawberryShake.GraphQLClientException());
            }

            throw new global::System.NotSupportedException();
        }

        global::System.Object global::StrawberryShake.IOperationResultDataFactory.Create(global::StrawberryShake.IOperationResultDataInfo dataInfo, global::StrawberryShake.IEntityStoreSnapshot? snapshot)
        {
            return Create(dataInfo, snapshot);
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public partial class CreateReviewResultInfo : global::StrawberryShake.IOperationResultDataInfo
    {
        private readonly global::System.Collections.Generic.IReadOnlyCollection<global::StrawberryShake.EntityId> _entityIds;
        private readonly global::System.UInt64 _version;
        public CreateReviewResultInfo(global::StarWarsGeneratedClient.State.CreateReviewPayloadData createReview, global::System.Collections.Generic.IReadOnlyCollection<global::StrawberryShake.EntityId> entityIds, global::System.UInt64 version)
        {
            CreateReview = createReview;
            _entityIds = entityIds ?? throw new global::System.ArgumentNullException(nameof(entityIds));
            _version = version;
        }

        /// <summary>
        /// Creates a review for a given Star Wars episode.
        /// </summary>
        public global::StarWarsGeneratedClient.State.CreateReviewPayloadData CreateReview { get; }

        public global::System.Collections.Generic.IReadOnlyCollection<global::StrawberryShake.EntityId> EntityIds => _entityIds;
        public global::System.UInt64 Version => _version;
        public global::StrawberryShake.IOperationResultDataInfo WithVersion(global::System.UInt64 version)
        {
            return new CreateReviewResultInfo(CreateReview, _entityIds, version);
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public partial class CreateReview_CreateReview_Review_ReviewFromReviewEntityMapper : global::StrawberryShake.IEntityMapper<global::StarWarsGeneratedClient.State.ReviewEntity, CreateReview_CreateReview_Review_Review>
    {
        private readonly global::StrawberryShake.IEntityStore _entityStore;
        public CreateReview_CreateReview_Review_ReviewFromReviewEntityMapper(global::StrawberryShake.IEntityStore entityStore)
        {
            _entityStore = entityStore ?? throw new global::System.ArgumentNullException(nameof(entityStore));
        }

        public CreateReview_CreateReview_Review_Review Map(global::StarWarsGeneratedClient.State.ReviewEntity entity, global::StrawberryShake.IEntityStoreSnapshot? snapshot = null)
        {
            if (snapshot is null)
            {
                snapshot = _entityStore.CurrentSnapshot;
            }

            return new CreateReview_CreateReview_Review_Review(entity.Commentary, entity.Stars);
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    internal interface ICreateReviewInputInfo
    {
        global::System.Boolean IsEpisodeSet { get; }

        global::System.Boolean IsStarsSet { get; }

        global::System.Boolean IsCommentarySet { get; }
    }

    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public partial class GetHeroBuilder : global::StrawberryShake.IOperationResultBuilder<global::System.Text.Json.JsonDocument, global::StarWarsGeneratedClient.IGetHeroResult>
    {
        private readonly global::StrawberryShake.IEntityStore _entityStore;
        private readonly global::StrawberryShake.IEntityIdSerializer _idSerializer;
        private readonly global::StrawberryShake.IOperationResultDataFactory<global::StarWarsGeneratedClient.IGetHeroResult> _resultDataFactory;
        private readonly global::StrawberryShake.Serialization.ILeafValueParser<global::System.String, global::StarWarsGeneratedClient.Episode> _episodeParser;
        private readonly global::StrawberryShake.Serialization.ILeafValueParser<global::System.Int32, global::System.Int32> _intParser;
        private readonly global::StrawberryShake.Serialization.ILeafValueParser<global::System.String, global::System.String> _stringParser;
        public GetHeroBuilder(global::StrawberryShake.IEntityStore entityStore, global::StrawberryShake.IEntityIdSerializer idSerializer, global::StrawberryShake.IOperationResultDataFactory<global::StarWarsGeneratedClient.IGetHeroResult> resultDataFactory, global::StrawberryShake.Serialization.ISerializerResolver serializerResolver)
        {
            _entityStore = entityStore ?? throw new global::System.ArgumentNullException(nameof(entityStore));
            _idSerializer = idSerializer ?? throw new global::System.ArgumentNullException(nameof(idSerializer));
            _resultDataFactory = resultDataFactory ?? throw new global::System.ArgumentNullException(nameof(resultDataFactory));
            _episodeParser = serializerResolver.GetLeafValueParser<global::System.String, global::StarWarsGeneratedClient.Episode>("Episode") ?? throw new global::System.ArgumentException("No serializer for type `Episode` found.");
            _intParser = serializerResolver.GetLeafValueParser<global::System.Int32, global::System.Int32>("Int") ?? throw new global::System.ArgumentException("No serializer for type `Int` found.");
            _stringParser = serializerResolver.GetLeafValueParser<global::System.String, global::System.String>("String") ?? throw new global::System.ArgumentException("No serializer for type `String` found.");
        }

        public global::StrawberryShake.IOperationResult<IGetHeroResult> Build(global::StrawberryShake.Response<global::System.Text.Json.JsonDocument> response)
        {
            (IGetHeroResult Result, GetHeroResultInfo Info)? data = null;
            global::System.Collections.Generic.IReadOnlyList<global::StrawberryShake.IClientError>? errors = null;
            if (response.Exception is null)
            {
                try
                {
                    if (response.Body != null)
                    {
                        if (response.Body.RootElement.TryGetProperty("data", out global::System.Text.Json.JsonElement dataElement) && dataElement.ValueKind == global::System.Text.Json.JsonValueKind.Object)
                        {
                            data = BuildData(dataElement);
                        }

                        if (response.Body.RootElement.TryGetProperty("errors", out global::System.Text.Json.JsonElement errorsElement))
                        {
                            errors = global::StrawberryShake.Json.JsonErrorParser.ParseErrors(errorsElement);
                        }
                    }
                }
                catch (global::System.Exception ex)
                {
                    errors = new global::StrawberryShake.IClientError[]{new global::StrawberryShake.ClientError(ex.Message, exception: ex, extensions: new global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object?>{{"body", response.Body?.RootElement.ToString()}})};
                }
            }
            else
            {
                errors = new global::StrawberryShake.IClientError[]{new global::StrawberryShake.ClientError(response.Exception.Message, exception: response.Exception, extensions: new global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object?>{{"body", response.Body?.RootElement.ToString()}})};
            }

            return new global::StrawberryShake.OperationResult<IGetHeroResult>(data?.Result, data?.Info, _resultDataFactory, errors);
        }

        private (IGetHeroResult, GetHeroResultInfo) BuildData(global::System.Text.Json.JsonElement obj)
        {
            var entityIds = new global::System.Collections.Generic.HashSet<global::StrawberryShake.EntityId>();
            global::StrawberryShake.IEntityStoreSnapshot snapshot = default !;
            global::StrawberryShake.EntityId heroId = default !;
            _entityStore.Update(session =>
            {
                heroId = UpdateNonNullableIGetHero_HeroEntity(session, global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "hero"), entityIds);
                snapshot = session.CurrentSnapshot;
            });
            var resultInfo = new GetHeroResultInfo(heroId, entityIds, snapshot.Version);
            return (_resultDataFactory.Create(resultInfo), resultInfo);
        }

        private global::StrawberryShake.EntityId UpdateNonNullableIGetHero_HeroEntity(global::StrawberryShake.IEntityStoreUpdateSession session, global::System.Text.Json.JsonElement? obj, global::System.Collections.Generic.ISet<global::StrawberryShake.EntityId> entityIds)
        {
            if (!obj.HasValue)
            {
                throw new global::System.ArgumentNullException();
            }

            global::StrawberryShake.EntityId entityId = _idSerializer.Parse(obj.Value);
            entityIds.Add(entityId);
            if (entityId.Name.Equals("Human", global::System.StringComparison.Ordinal))
            {
                if (session.CurrentSnapshot.TryGetEntity(entityId, out global::StarWarsGeneratedClient.State.HumanEntity? entity))
                {
                    session.SetEntity(entityId, new global::StarWarsGeneratedClient.State.HumanEntity(DeserializeNonNullableInt32(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "id")), DeserializeNonNullableString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "name")), DeserializeIGetHero_Hero_Friends(session, global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "friends"), entityIds)));
                }
                else
                {
                    session.SetEntity(entityId, new global::StarWarsGeneratedClient.State.HumanEntity(DeserializeNonNullableInt32(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "id")), DeserializeNonNullableString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "name")), DeserializeIGetHero_Hero_Friends(session, global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "friends"), entityIds)));
                }

                return entityId;
            }

            if (entityId.Name.Equals("Droid", global::System.StringComparison.Ordinal))
            {
                if (session.CurrentSnapshot.TryGetEntity(entityId, out global::StarWarsGeneratedClient.State.DroidEntity? entity))
                {
                    session.SetEntity(entityId, new global::StarWarsGeneratedClient.State.DroidEntity(DeserializeNonNullableInt32(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "id")), DeserializeNonNullableString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "name")), DeserializeIGetHero_Hero_Friends(session, global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "friends"), entityIds)));
                }
                else
                {
                    session.SetEntity(entityId, new global::StarWarsGeneratedClient.State.DroidEntity(DeserializeNonNullableInt32(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "id")), DeserializeNonNullableString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "name")), DeserializeIGetHero_Hero_Friends(session, global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "friends"), entityIds)));
                }

                return entityId;
            }

            throw new global::System.NotSupportedException();
        }

        private global::System.Int32 DeserializeNonNullableInt32(global::System.Text.Json.JsonElement? obj)
        {
            if (!obj.HasValue)
            {
                throw new global::System.ArgumentNullException();
            }

            return _intParser.Parse(obj.Value.GetInt32()!);
        }

        private global::System.String DeserializeNonNullableString(global::System.Text.Json.JsonElement? obj)
        {
            if (!obj.HasValue)
            {
                throw new global::System.ArgumentNullException();
            }

            return _stringParser.Parse(obj.Value.GetString()!);
        }

        private global::StarWarsGeneratedClient.State.CharacterConnectionData? DeserializeIGetHero_Hero_Friends(global::StrawberryShake.IEntityStoreUpdateSession session, global::System.Text.Json.JsonElement? obj, global::System.Collections.Generic.ISet<global::StrawberryShake.EntityId> entityIds)
        {
            if (!obj.HasValue)
            {
                return null;
            }

            var typename = obj.Value.GetProperty("__typename").GetString();
            if (typename?.Equals("CharacterConnection", global::System.StringComparison.Ordinal) ?? false)
            {
                return new global::StarWarsGeneratedClient.State.CharacterConnectionData(typename, edges: DeserializeIGetHero_Hero_Friends_EdgesNonNullableArray(session, global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "edges"), entityIds));
            }

            throw new global::System.NotSupportedException();
        }

        private global::System.Collections.Generic.IReadOnlyList<global::StarWarsGeneratedClient.State.CharacterEdgeData>? DeserializeIGetHero_Hero_Friends_EdgesNonNullableArray(global::StrawberryShake.IEntityStoreUpdateSession session, global::System.Text.Json.JsonElement? obj, global::System.Collections.Generic.ISet<global::StrawberryShake.EntityId> entityIds)
        {
            if (!obj.HasValue)
            {
                return null;
            }

            var characterEdges = new global::System.Collections.Generic.List<global::StarWarsGeneratedClient.State.CharacterEdgeData>();
            foreach (global::System.Text.Json.JsonElement child in obj.Value.EnumerateArray())
            {
                characterEdges.Add(DeserializeNonNullableIGetHero_Hero_Friends_Edges(session, child, entityIds));
            }

            return characterEdges;
        }

        private global::StarWarsGeneratedClient.State.CharacterEdgeData DeserializeNonNullableIGetHero_Hero_Friends_Edges(global::StrawberryShake.IEntityStoreUpdateSession session, global::System.Text.Json.JsonElement? obj, global::System.Collections.Generic.ISet<global::StrawberryShake.EntityId> entityIds)
        {
            if (!obj.HasValue)
            {
                throw new global::System.ArgumentNullException();
            }

            var typename = obj.Value.GetProperty("__typename").GetString();
            if (typename?.Equals("CharacterEdge", global::System.StringComparison.Ordinal) ?? false)
            {
                return new global::StarWarsGeneratedClient.State.CharacterEdgeData(typename, node: UpdateIGetHero_Hero_Friends_Edges_NodeEntity(session, global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "node"), entityIds));
            }

            throw new global::System.NotSupportedException();
        }

        private global::StrawberryShake.EntityId? UpdateIGetHero_Hero_Friends_Edges_NodeEntity(global::StrawberryShake.IEntityStoreUpdateSession session, global::System.Text.Json.JsonElement? obj, global::System.Collections.Generic.ISet<global::StrawberryShake.EntityId> entityIds)
        {
            if (!obj.HasValue)
            {
                return null;
            }

            global::StrawberryShake.EntityId entityId = _idSerializer.Parse(obj.Value);
            entityIds.Add(entityId);
            if (entityId.Name.Equals("Human", global::System.StringComparison.Ordinal))
            {
                if (session.CurrentSnapshot.TryGetEntity(entityId, out global::StarWarsGeneratedClient.State.HumanEntity? entity))
                {
                    session.SetEntity(entityId, new global::StarWarsGeneratedClient.State.HumanEntity(DeserializeNonNullableInt32(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "id")), DeserializeNonNullableString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "name")), entity.Friends));
                }
                else
                {
                    session.SetEntity(entityId, new global::StarWarsGeneratedClient.State.HumanEntity(DeserializeNonNullableInt32(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "id")), DeserializeNonNullableString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "name")), default !));
                }

                return entityId;
            }

            if (entityId.Name.Equals("Droid", global::System.StringComparison.Ordinal))
            {
                if (session.CurrentSnapshot.TryGetEntity(entityId, out global::StarWarsGeneratedClient.State.DroidEntity? entity))
                {
                    session.SetEntity(entityId, new global::StarWarsGeneratedClient.State.DroidEntity(DeserializeNonNullableInt32(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "id")), DeserializeNonNullableString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "name")), entity.Friends));
                }
                else
                {
                    session.SetEntity(entityId, new global::StarWarsGeneratedClient.State.DroidEntity(DeserializeNonNullableInt32(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "id")), DeserializeNonNullableString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "name")), default !));
                }

                return entityId;
            }

            throw new global::System.NotSupportedException();
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public partial class GetCharactersBuilder : global::StrawberryShake.IOperationResultBuilder<global::System.Text.Json.JsonDocument, global::StarWarsGeneratedClient.IGetCharactersResult>
    {
        private readonly global::StrawberryShake.IEntityStore _entityStore;
        private readonly global::StrawberryShake.IEntityIdSerializer _idSerializer;
        private readonly global::StrawberryShake.IOperationResultDataFactory<global::StarWarsGeneratedClient.IGetCharactersResult> _resultDataFactory;
        private readonly global::StrawberryShake.Serialization.ILeafValueParser<global::System.Int32, global::System.Int32> _intParser;
        private readonly global::StrawberryShake.Serialization.ILeafValueParser<global::System.String, global::System.String> _stringParser;
        public GetCharactersBuilder(global::StrawberryShake.IEntityStore entityStore, global::StrawberryShake.IEntityIdSerializer idSerializer, global::StrawberryShake.IOperationResultDataFactory<global::StarWarsGeneratedClient.IGetCharactersResult> resultDataFactory, global::StrawberryShake.Serialization.ISerializerResolver serializerResolver)
        {
            _entityStore = entityStore ?? throw new global::System.ArgumentNullException(nameof(entityStore));
            _idSerializer = idSerializer ?? throw new global::System.ArgumentNullException(nameof(idSerializer));
            _resultDataFactory = resultDataFactory ?? throw new global::System.ArgumentNullException(nameof(resultDataFactory));
            _intParser = serializerResolver.GetLeafValueParser<global::System.Int32, global::System.Int32>("Int") ?? throw new global::System.ArgumentException("No serializer for type `Int` found.");
            _stringParser = serializerResolver.GetLeafValueParser<global::System.String, global::System.String>("String") ?? throw new global::System.ArgumentException("No serializer for type `String` found.");
        }

        public global::StrawberryShake.IOperationResult<IGetCharactersResult> Build(global::StrawberryShake.Response<global::System.Text.Json.JsonDocument> response)
        {
            (IGetCharactersResult Result, GetCharactersResultInfo Info)? data = null;
            global::System.Collections.Generic.IReadOnlyList<global::StrawberryShake.IClientError>? errors = null;
            if (response.Exception is null)
            {
                try
                {
                    if (response.Body != null)
                    {
                        if (response.Body.RootElement.TryGetProperty("data", out global::System.Text.Json.JsonElement dataElement) && dataElement.ValueKind == global::System.Text.Json.JsonValueKind.Object)
                        {
                            data = BuildData(dataElement);
                        }

                        if (response.Body.RootElement.TryGetProperty("errors", out global::System.Text.Json.JsonElement errorsElement))
                        {
                            errors = global::StrawberryShake.Json.JsonErrorParser.ParseErrors(errorsElement);
                        }
                    }
                }
                catch (global::System.Exception ex)
                {
                    errors = new global::StrawberryShake.IClientError[]{new global::StrawberryShake.ClientError(ex.Message, exception: ex, extensions: new global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object?>{{"body", response.Body?.RootElement.ToString()}})};
                }
            }
            else
            {
                errors = new global::StrawberryShake.IClientError[]{new global::StrawberryShake.ClientError(response.Exception.Message, exception: response.Exception, extensions: new global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object?>{{"body", response.Body?.RootElement.ToString()}})};
            }

            return new global::StrawberryShake.OperationResult<IGetCharactersResult>(data?.Result, data?.Info, _resultDataFactory, errors);
        }

        private (IGetCharactersResult, GetCharactersResultInfo) BuildData(global::System.Text.Json.JsonElement obj)
        {
            var entityIds = new global::System.Collections.Generic.HashSet<global::StrawberryShake.EntityId>();
            global::StrawberryShake.IEntityStoreSnapshot snapshot = default !;
            global::System.Collections.Generic.IReadOnlyList<global::StrawberryShake.EntityId> characterId = default !;
            _entityStore.Update(session =>
            {
                characterId = UpdateNonNullableIGetCharacters_CharacterEntityNonNullableArray(session, global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "character"), entityIds);
                snapshot = session.CurrentSnapshot;
            });
            var resultInfo = new GetCharactersResultInfo(characterId, entityIds, snapshot.Version);
            return (_resultDataFactory.Create(resultInfo), resultInfo);
        }

        private global::System.Collections.Generic.IReadOnlyList<global::StrawberryShake.EntityId> UpdateNonNullableIGetCharacters_CharacterEntityNonNullableArray(global::StrawberryShake.IEntityStoreUpdateSession session, global::System.Text.Json.JsonElement? obj, global::System.Collections.Generic.ISet<global::StrawberryShake.EntityId> entityIds)
        {
            if (!obj.HasValue)
            {
                throw new global::System.ArgumentNullException();
            }

            var characters = new global::System.Collections.Generic.List<global::StrawberryShake.EntityId>();
            foreach (global::System.Text.Json.JsonElement child in obj.Value.EnumerateArray())
            {
                characters.Add(UpdateNonNullableIGetCharacters_CharacterEntity(session, child, entityIds));
            }

            return characters;
        }

        private global::StrawberryShake.EntityId UpdateNonNullableIGetCharacters_CharacterEntity(global::StrawberryShake.IEntityStoreUpdateSession session, global::System.Text.Json.JsonElement? obj, global::System.Collections.Generic.ISet<global::StrawberryShake.EntityId> entityIds)
        {
            if (!obj.HasValue)
            {
                throw new global::System.ArgumentNullException();
            }

            global::StrawberryShake.EntityId entityId = _idSerializer.Parse(obj.Value);
            entityIds.Add(entityId);
            if (entityId.Name.Equals("Human", global::System.StringComparison.Ordinal))
            {
                if (session.CurrentSnapshot.TryGetEntity(entityId, out global::StarWarsGeneratedClient.State.HumanEntity? entity))
                {
                    session.SetEntity(entityId, new global::StarWarsGeneratedClient.State.HumanEntity(DeserializeNonNullableInt32(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "id")), DeserializeNonNullableString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "name")), entity.Friends));
                }
                else
                {
                    session.SetEntity(entityId, new global::StarWarsGeneratedClient.State.HumanEntity(DeserializeNonNullableInt32(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "id")), DeserializeNonNullableString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "name")), default !));
                }

                return entityId;
            }

            if (entityId.Name.Equals("Droid", global::System.StringComparison.Ordinal))
            {
                if (session.CurrentSnapshot.TryGetEntity(entityId, out global::StarWarsGeneratedClient.State.DroidEntity? entity))
                {
                    session.SetEntity(entityId, new global::StarWarsGeneratedClient.State.DroidEntity(DeserializeNonNullableInt32(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "id")), DeserializeNonNullableString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "name")), entity.Friends));
                }
                else
                {
                    session.SetEntity(entityId, new global::StarWarsGeneratedClient.State.DroidEntity(DeserializeNonNullableInt32(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "id")), DeserializeNonNullableString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "name")), default !));
                }

                return entityId;
            }

            throw new global::System.NotSupportedException();
        }

        private global::System.Int32 DeserializeNonNullableInt32(global::System.Text.Json.JsonElement? obj)
        {
            if (!obj.HasValue)
            {
                throw new global::System.ArgumentNullException();
            }

            return _intParser.Parse(obj.Value.GetInt32()!);
        }

        private global::System.String DeserializeNonNullableString(global::System.Text.Json.JsonElement? obj)
        {
            if (!obj.HasValue)
            {
                throw new global::System.ArgumentNullException();
            }

            return _stringParser.Parse(obj.Value.GetString()!);
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public partial class CreateReviewBuilder : global::StrawberryShake.IOperationResultBuilder<global::System.Text.Json.JsonDocument, global::StarWarsGeneratedClient.ICreateReviewResult>
    {
        private readonly global::StrawberryShake.IEntityStore _entityStore;
        private readonly global::StrawberryShake.IEntityIdSerializer _idSerializer;
        private readonly global::StrawberryShake.IOperationResultDataFactory<global::StarWarsGeneratedClient.ICreateReviewResult> _resultDataFactory;
        private readonly global::StrawberryShake.Serialization.ILeafValueParser<global::System.String, global::StarWarsGeneratedClient.Episode> _episodeParser;
        private readonly global::StrawberryShake.Serialization.ILeafValueParser<global::System.Int32, global::System.Int32> _intParser;
        private readonly global::StrawberryShake.Serialization.ILeafValueParser<global::System.String, global::System.String> _stringParser;
        public CreateReviewBuilder(global::StrawberryShake.IEntityStore entityStore, global::StrawberryShake.IEntityIdSerializer idSerializer, global::StrawberryShake.IOperationResultDataFactory<global::StarWarsGeneratedClient.ICreateReviewResult> resultDataFactory, global::StrawberryShake.Serialization.ISerializerResolver serializerResolver)
        {
            _entityStore = entityStore ?? throw new global::System.ArgumentNullException(nameof(entityStore));
            _idSerializer = idSerializer ?? throw new global::System.ArgumentNullException(nameof(idSerializer));
            _resultDataFactory = resultDataFactory ?? throw new global::System.ArgumentNullException(nameof(resultDataFactory));
            _episodeParser = serializerResolver.GetLeafValueParser<global::System.String, global::StarWarsGeneratedClient.Episode>("Episode") ?? throw new global::System.ArgumentException("No serializer for type `Episode` found.");
            _intParser = serializerResolver.GetLeafValueParser<global::System.Int32, global::System.Int32>("Int") ?? throw new global::System.ArgumentException("No serializer for type `Int` found.");
            _stringParser = serializerResolver.GetLeafValueParser<global::System.String, global::System.String>("String") ?? throw new global::System.ArgumentException("No serializer for type `String` found.");
        }

        public global::StrawberryShake.IOperationResult<ICreateReviewResult> Build(global::StrawberryShake.Response<global::System.Text.Json.JsonDocument> response)
        {
            (ICreateReviewResult Result, CreateReviewResultInfo Info)? data = null;
            global::System.Collections.Generic.IReadOnlyList<global::StrawberryShake.IClientError>? errors = null;
            if (response.Exception is null)
            {
                try
                {
                    if (response.Body != null)
                    {
                        if (response.Body.RootElement.TryGetProperty("data", out global::System.Text.Json.JsonElement dataElement) && dataElement.ValueKind == global::System.Text.Json.JsonValueKind.Object)
                        {
                            data = BuildData(dataElement);
                        }

                        if (response.Body.RootElement.TryGetProperty("errors", out global::System.Text.Json.JsonElement errorsElement))
                        {
                            errors = global::StrawberryShake.Json.JsonErrorParser.ParseErrors(errorsElement);
                        }
                    }
                }
                catch (global::System.Exception ex)
                {
                    errors = new global::StrawberryShake.IClientError[]{new global::StrawberryShake.ClientError(ex.Message, exception: ex, extensions: new global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object?>{{"body", response.Body?.RootElement.ToString()}})};
                }
            }
            else
            {
                errors = new global::StrawberryShake.IClientError[]{new global::StrawberryShake.ClientError(response.Exception.Message, exception: response.Exception, extensions: new global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object?>{{"body", response.Body?.RootElement.ToString()}})};
            }

            return new global::StrawberryShake.OperationResult<ICreateReviewResult>(data?.Result, data?.Info, _resultDataFactory, errors);
        }

        private (ICreateReviewResult, CreateReviewResultInfo) BuildData(global::System.Text.Json.JsonElement obj)
        {
            var entityIds = new global::System.Collections.Generic.HashSet<global::StrawberryShake.EntityId>();
            global::StrawberryShake.IEntityStoreSnapshot snapshot = default !;
            global::StarWarsGeneratedClient.State.CreateReviewPayloadData createReviewId = default !;
            _entityStore.Update(session =>
            {
                createReviewId = DeserializeNonNullableICreateReview_CreateReview(session, global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "createReview"), entityIds);
                snapshot = session.CurrentSnapshot;
            });
            var resultInfo = new CreateReviewResultInfo(createReviewId, entityIds, snapshot.Version);
            return (_resultDataFactory.Create(resultInfo), resultInfo);
        }

        private global::StarWarsGeneratedClient.State.CreateReviewPayloadData DeserializeNonNullableICreateReview_CreateReview(global::StrawberryShake.IEntityStoreUpdateSession session, global::System.Text.Json.JsonElement? obj, global::System.Collections.Generic.ISet<global::StrawberryShake.EntityId> entityIds)
        {
            if (!obj.HasValue)
            {
                throw new global::System.ArgumentNullException();
            }

            var typename = obj.Value.GetProperty("__typename").GetString();
            if (typename?.Equals("CreateReviewPayload", global::System.StringComparison.Ordinal) ?? false)
            {
                return new global::StarWarsGeneratedClient.State.CreateReviewPayloadData(typename, review: UpdateNonNullableICreateReview_CreateReview_ReviewEntity(session, global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "review"), entityIds));
            }

            throw new global::System.NotSupportedException();
        }

        private global::StrawberryShake.EntityId UpdateNonNullableICreateReview_CreateReview_ReviewEntity(global::StrawberryShake.IEntityStoreUpdateSession session, global::System.Text.Json.JsonElement? obj, global::System.Collections.Generic.ISet<global::StrawberryShake.EntityId> entityIds)
        {
            if (!obj.HasValue)
            {
                throw new global::System.ArgumentNullException();
            }

            global::StrawberryShake.EntityId entityId = _idSerializer.Parse(obj.Value);
            entityIds.Add(entityId);
            if (entityId.Name.Equals("Review", global::System.StringComparison.Ordinal))
            {
                if (session.CurrentSnapshot.TryGetEntity(entityId, out global::StarWarsGeneratedClient.State.ReviewEntity? entity))
                {
                    session.SetEntity(entityId, new global::StarWarsGeneratedClient.State.ReviewEntity(DeserializeNonNullableString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "commentary")), DeserializeNonNullableInt32(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "stars"))));
                }
                else
                {
                    session.SetEntity(entityId, new global::StarWarsGeneratedClient.State.ReviewEntity(DeserializeNonNullableString(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "commentary")), DeserializeNonNullableInt32(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "stars"))));
                }

                return entityId;
            }

            throw new global::System.NotSupportedException();
        }

        private global::System.String DeserializeNonNullableString(global::System.Text.Json.JsonElement? obj)
        {
            if (!obj.HasValue)
            {
                throw new global::System.ArgumentNullException();
            }

            return _stringParser.Parse(obj.Value.GetString()!);
        }

        private global::System.Int32 DeserializeNonNullableInt32(global::System.Text.Json.JsonElement? obj)
        {
            if (!obj.HasValue)
            {
                throw new global::System.ArgumentNullException();
            }

            return _intParser.Parse(obj.Value.GetInt32()!);
        }
    }

    ///<summary>A connection to a list of items.</summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public partial class CharacterConnectionData
    {
        public CharacterConnectionData(global::System.String __typename, global::System.Collections.Generic.IReadOnlyList<global::StarWarsGeneratedClient.State.CharacterEdgeData>? edges = default !)
        {
            this.__typename = __typename ?? throw new global::System.ArgumentNullException(nameof(__typename));
            Edges = edges;
        }

        public global::System.String __typename { get; }

        ///<summary>A list of edges.</summary>
        public global::System.Collections.Generic.IReadOnlyList<global::StarWarsGeneratedClient.State.CharacterEdgeData>? Edges { get; }
    }

    ///<summary>An edge in a connection.</summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public partial class CharacterEdgeData
    {
        public CharacterEdgeData(global::System.String __typename, global::StrawberryShake.EntityId? node = default !)
        {
            this.__typename = __typename ?? throw new global::System.ArgumentNullException(nameof(__typename));
            Node = node;
        }

        public global::System.String __typename { get; }

        ///<summary>The item at the end of the edge.</summary>
        public global::StrawberryShake.EntityId? Node { get; }
    }

    ///<summary>This payload allows us to query the created review object.</summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public partial class CreateReviewPayloadData
    {
        public CreateReviewPayloadData(global::System.String __typename, global::StrawberryShake.EntityId? review = default !)
        {
            this.__typename = __typename ?? throw new global::System.ArgumentNullException(nameof(__typename));
            Review = review;
        }

        public global::System.String __typename { get; }

        ///<summary>The review that was being created.</summary>
        public global::StrawberryShake.EntityId? Review { get; }
    }

    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public partial class StarWarsGeneratedClientEntityIdFactory : global::StrawberryShake.IEntityIdSerializer
    {
        private static readonly global::System.Text.Json.JsonWriterOptions _options = new global::System.Text.Json.JsonWriterOptions()
        {Indented = false};
        public global::StrawberryShake.EntityId Parse(global::System.Text.Json.JsonElement obj)
        {
            global::System.String __typename = obj.GetProperty("__typename").GetString()!;
            return __typename switch
            {
            "Human" => ParseHumanEntityId(obj, __typename), "Droid" => ParseDroidEntityId(obj, __typename), "Review" => ParseReviewEntityId(obj, __typename), _ => throw new global::System.NotSupportedException()}

            ;
        }

        public global::System.String Format(global::StrawberryShake.EntityId entityId)
        {
            return entityId.Name switch
            {
            "Human" => FormatHumanEntityId(entityId), "Droid" => FormatDroidEntityId(entityId), "Review" => FormatReviewEntityId(entityId), _ => throw new global::System.NotSupportedException()}

            ;
        }

        private global::StrawberryShake.EntityId ParseHumanEntityId(global::System.Text.Json.JsonElement obj, global::System.String type)
        {
            return new global::StrawberryShake.EntityId(type, obj.GetProperty("id").GetInt32()!);
        }

        private global::System.String FormatHumanEntityId(global::StrawberryShake.EntityId entityId)
        {
            using var writer = new global::StrawberryShake.Internal.ArrayWriter();
            using var jsonWriter = new global::System.Text.Json.Utf8JsonWriter(writer, _options);
            jsonWriter.WriteStartObject();
            jsonWriter.WriteString("__typename", entityId.Name);
            jsonWriter.WriteNumber("id", (global::System.Int32)entityId.Value);
            jsonWriter.WriteEndObject();
            jsonWriter.Flush();
            return global::System.Text.Encoding.UTF8.GetString(writer.GetInternalBuffer(), 0, writer.Length);
        }

        private global::StrawberryShake.EntityId ParseDroidEntityId(global::System.Text.Json.JsonElement obj, global::System.String type)
        {
            return new global::StrawberryShake.EntityId(type, obj.GetProperty("id").GetInt32()!);
        }

        private global::System.String FormatDroidEntityId(global::StrawberryShake.EntityId entityId)
        {
            using var writer = new global::StrawberryShake.Internal.ArrayWriter();
            using var jsonWriter = new global::System.Text.Json.Utf8JsonWriter(writer, _options);
            jsonWriter.WriteStartObject();
            jsonWriter.WriteString("__typename", entityId.Name);
            jsonWriter.WriteNumber("id", (global::System.Int32)entityId.Value);
            jsonWriter.WriteEndObject();
            jsonWriter.Flush();
            return global::System.Text.Encoding.UTF8.GetString(writer.GetInternalBuffer(), 0, writer.Length);
        }

        private global::StrawberryShake.EntityId ParseReviewEntityId(global::System.Text.Json.JsonElement obj, global::System.String type)
        {
            return new global::StrawberryShake.EntityId(type, obj.GetProperty("id").GetString()!);
        }

        private global::System.String FormatReviewEntityId(global::StrawberryShake.EntityId entityId)
        {
            using var writer = new global::StrawberryShake.Internal.ArrayWriter();
            using var jsonWriter = new global::System.Text.Json.Utf8JsonWriter(writer, _options);
            jsonWriter.WriteStartObject();
            jsonWriter.WriteString("__typename", entityId.Name);
            jsonWriter.WriteString("id", (global::System.String)entityId.Value);
            jsonWriter.WriteEndObject();
            jsonWriter.Flush();
            return global::System.Text.Encoding.UTF8.GetString(writer.GetInternalBuffer(), 0, writer.Length);
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "12.0.0.0")]
    public partial class StarWarsGeneratedClientStoreAccessor : global::StrawberryShake.StoreAccessor
    {
        public StarWarsGeneratedClientStoreAccessor(global::StrawberryShake.IOperationStore operationStore, global::StrawberryShake.IEntityStore entityStore, global::StrawberryShake.IEntityIdSerializer entityIdSerializer, global::System.Collections.Generic.IEnumerable<global::StrawberryShake.IOperationRequestFactory> requestFactories, global::System.Collections.Generic.IEnumerable<global::StrawberryShake.IOperationResultDataFactory> resultDataFactories): base(operationStore, entityStore, entityIdSerializer, requestFactories, resultDataFactories)
        {
        }
    }
}
